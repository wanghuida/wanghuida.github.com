<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[老虎的眼睛]]></title>
  <link href="http://www.wanghd.com/atom.xml" rel="self"/>
  <link href="http://www.wanghd.com/"/>
  <updated>2013-01-06T17:37:42+08:00</updated>
  <id>http://www.wanghd.com/</id>
  <author>
    <name><![CDATA[王惠达 huida wanghuida]]></name>
    <email><![CDATA[wanghuida258@yahoo.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[date函数的误用]]></title>
    <link href="http://www.wanghd.com/blog/2013/01/06/datehan-shu-de-wu-yong/"/>
    <updated>2013-01-06T17:22:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2013/01/06/datehan-shu-de-wu-yong</id>
    <content type="html"><![CDATA[<h3>需求：得到给定日期为一年中的第几周，并取得该周的年份</h3>

<ul>
<li>产生bug的写法</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="nv">$time_2012_12_31</span> <span class="o">=</span> <span class="nb">mktime</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">2012</span><span class="p">);</span>
</span><span class='line'><span class="nv">$week_2012_12_31</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;W&#39;</span><span class="p">,</span><span class="nv">$time_2012_12_31</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;2012-12-31: week is </span><span class="si">{</span><span class="nv">$week_2012_12_31</span><span class="si">}</span><span class="s2"> </span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$error_year_2012_12_31</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y&#39;</span><span class="p">,</span><span class="nv">$time_2012_12_31</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;2012-12-31: error year is </span><span class="si">{</span><span class="nv">$error_year_2012_12_31</span><span class="si">}</span><span class="s2"> </span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#输出错误的结果</span>
</span><span class='line'><span class="mi">2012</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span><span class="o">:</span> <span class="nx">week</span> <span class="nx">is</span> <span class="mo">01</span>
</span><span class='line'><span class="mi">2012</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span><span class="o">:</span> <span class="nx">error</span> <span class="nx">year</span> <span class="nx">is</span> <span class="mi">2012</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>正确的写法，统一采用ISO-8601标准</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="nv">$time_2012_12_31</span> <span class="o">=</span> <span class="nb">mktime</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">2012</span><span class="p">);</span>
</span><span class='line'><span class="nv">$week_2012_12_31</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;W&#39;</span><span class="p">,</span><span class="nv">$time_2012_12_31</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;2012-12-31: week is </span><span class="si">{</span><span class="nv">$week_2012_12_31</span><span class="si">}</span><span class="s2"> </span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$year_2012_12_31</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;o&#39;</span><span class="p">,</span><span class="nv">$time_2012_12_31</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;2012-12-31: year is </span><span class="si">{</span><span class="nv">$year_2012_12_31</span><span class="si">}</span><span class="s2"> </span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#输出正确的结果</span>
</span><span class='line'><span class="mi">2012</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span><span class="o">:</span> <span class="nx">week</span> <span class="nx">is</span> <span class="mo">01</span>
</span><span class='line'><span class="mi">2012</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span><span class="o">:</span> <span class="nx">year</span> <span class="nx">is</span> <span class="mi">2013</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jquery在firefox下无法autocomplete]]></title>
    <link href="http://www.wanghd.com/blog/2013/01/04/jqueryzai-firefoxxia-wu-fa-autocomplete/"/>
    <updated>2013-01-04T17:29:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2013/01/04/jqueryzai-firefoxxia-wu-fa-autocomplete</id>
    <content type="html"><![CDATA[<h4>jquery的autocomplete中文输入在firefox无法正常使用</h4>

<ul>
<li>firefox下用input事件触发keydown即可</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$('元素').bind('input', function(){
</span><span class='line'>    $(this).trigger('keydown');
</span><span class='line'>}).bind("keydown", function(event){
</span><span class='line'>    事件
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[System.out.println 乱码]]></title>
    <link href="http://www.wanghd.com/blog/2012/12/17/system-dot-out-dot-printlnluan-ma/"/>
    <updated>2012-12-17T22:30:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/12/17/system-dot-out-dot-printlnluan-ma</id>
    <content type="html"><![CDATA[<h3>今天郁闷发现eclipse控制中文乱码</h3>

<ul>
<li>在网上找答案真心蛋疼，说啥的都有</li>
<li>特此在这里记录一下</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Run Configurations... -&gt; Common选项卡 -&gt; Encoding区，选择Other UTF-8</span></code></pre></td></tr></table></div></figure>


<p><img src="http://www.wanghd.com/images/post/console-messy-code.jpg" title="console messy code" alt="console messy code" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mogilefs设备损坏处理流程]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/25/mogilefsshe-bei-sun-pi-chu-li-liu-cheng/"/>
    <updated>2012-11-25T19:34:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/25/mogilefsshe-bei-sun-pi-chu-li-liu-cheng</id>
    <content type="html"><![CDATA[<ul>
<li>这里单个dev对应一个磁盘,假设是sdb</li>
<li>文件系统使用xfs</li>
<li>mogstored使用nginx</li>
</ul>


<p>1.把磁盘标记为dead</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mogadm device mark &lt;hostname&gt; &lt;devid&gt; &lt;status&gt;
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>2.格式化新磁盘或损坏的磁盘, 并挂到新的目录</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkfs.xfs -f -i <span class="nv">size</span><span class="o">=</span>512 -l <span class="nv">size</span><span class="o">=</span>128m,lazy-count<span class="o">=</span>1 -d <span class="nv">agcount</span><span class="o">=</span>16 /dev/sdb
</span><span class='line'>
</span><span class='line'>mkdir -p /var/mogdata/<span class="o">{</span>new-dev<span class="o">}</span>
</span><span class='line'>
</span><span class='line'>mount -t xfs -o noatime,noikeep,logbufs<span class="o">=</span>8 /var/mogdata/<span class="o">{</span>new-dev<span class="o">}</span> /dev/sdb
</span><span class='line'>
</span><span class='line'><span class="c">#增加到fstab</span>
</span><span class='line'>vim /etc/fstab
</span><span class='line'>/dev/sdb     /var/mogdata/<span class="o">{</span>new-dev<span class="o">}</span>    xfs    noatime,noikeep,logbufs<span class="o">=</span>8    0 0
</span></code></pre></td></tr></table></div></figure>


<p>3.配置nginx</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chown -R mogile.daemon /var/mogdata/<span class="o">{</span>new-dev<span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c">#建议注释掉损坏的location</span>
</span><span class='line'>vim /etc/nginx/conf.d/<span class="o">{</span>xxx.conf<span class="o">}</span>
</span><span class='line'>
</span><span class='line'>location /<span class="o">{</span>new-dev<span class="o">}</span>/ <span class="o">{</span>
</span><span class='line'>    expires             max;
</span><span class='line'>    root                /var/mogdata;
</span><span class='line'>    client_max_body_size        20m;
</span><span class='line'>    client_body_temp_path       /var/mogdata/<span class="o">{</span>new-dev<span class="o">}</span>/temp;
</span><span class='line'>    dav_methods                 PUT DELETE MKCOL;
</span><span class='line'>    create_full_put_path        on;
</span><span class='line'>    dav_access                  user:rw group:r all:r;
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>/etc/init.d/nginx reload
</span></code></pre></td></tr></table></div></figure>


<p>4.增加一个新设备</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mogadm device add &lt;hostname&gt; &lt;devid&gt; <span class="o">[</span>opts<span class="o">]</span>        Add a device to a host.
</span><span class='line'>
</span><span class='line'>      &lt;devid&gt;              Numeric devid.  Never reuse these.
</span><span class='line'>      &lt;hostname&gt;           Hostname to add a device
</span><span class='line'>      --status<span class="o">=</span>s           One of <span class="s1">&#39;alive&#39;</span> or <span class="s1">&#39;down&#39;</span>.  Defaults to <span class="s1">&#39;alive&#39;</span>.
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[inotify,rsync统一化配置]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/25/inotify/"/>
    <updated>2012-11-25T16:14:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/25/inotify</id>
    <content type="html"><![CDATA[<h3>为什么要统一化配置，手动改改不行？</h3>

<ul>
<li>假设有10台服务器，要改10次，错误和遗漏在所难免</li>
<li>需要有一个地方备份配置</li>
<li>也许还需要对配置文件进行版本控制</li>
</ul>


<h3>inotify+rsync改变这一切</h3>

<ul>
<li>inotify可以递归的监控文件是否有新建，修改等</li>
<li>rsync用来同步</li>
</ul>


<!-- more -->


<h3>安装inotify</h3>

<ul>
<li>内核版本要Linux 2.6.13以上</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget --no-check-certificate https://github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz
</span><span class='line'>tar -zxvf inotify-tools-3.14.tar.gz
</span><span class='line'><span class="nb">cd </span>inotify-tools-3.14
</span><span class='line'>./configure
</span><span class='line'>make
</span><span class='line'>make install
</span></code></pre></td></tr></table></div></figure>


<h3>测试脚本监控修改并自动同步</h3>

<ul>
<li>&#8211;exclude是用来排除隐藏文件</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'><span class="nv">ip</span><span class="o">=</span><span class="s2">&quot;192.168.30.1 192.168.30.2&quot;</span>
</span><span class='line'><span class="nv">src</span><span class="o">=</span><span class="s2">&quot;/tmp/test&quot;</span>
</span><span class='line'>inotifywait --exclude <span class="s1">&#39;/\.&#39;</span> -mrq -e close_write,delete,move <span class="nv">$src</span> | <span class="k">while </span><span class="nb">read </span>line
</span><span class='line'><span class="k">do</span>
</span><span class='line'><span class="k">    </span>sleep 1
</span><span class='line'>    <span class="nb">echo</span> <span class="nv">$line</span>
</span><span class='line'>    <span class="k">for </span>i in <span class="nv">$ip</span>
</span><span class='line'>    <span class="k">do </span>
</span><span class='line'><span class="k">        </span>rsync --exclude<span class="o">=</span><span class="s2">&quot;.*&quot;</span> -av --delete-after <span class="s2">&quot;$src/&quot;</span> -e ssh <span class="s2">&quot;$i:$src/&quot;</span>
</span><span class='line'>    <span class="k">done</span>
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MogileFS安装配置]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/22/mogilefsan-zhuang-pei-zhi/"/>
    <updated>2012-11-22T17:19:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/22/mogilefsan-zhuang-pei-zhi</id>
    <content type="html"><![CDATA[<h3>基本介绍</h3>

<ul>
<li>mogilefs是一个分布式的文件系统解决方案</li>
<li>特点是:无单点失效的问题，自动复制无需raid，easy的命名空间，自修复机制，成熟的管理工具，源码清晰推荐阅读</li>
</ul>


<!-- more -->


<h3>安装基本组件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum groupinstall <span class="s2">&quot;Development Tools&quot;</span>
</span><span class='line'><span class="c">#cpan是perl的包管理工具</span>
</span><span class='line'>yum install cpan
</span></code></pre></td></tr></table></div></figure>


<h3>安装mogilefs</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#进入cpan,初始化直接自动就好</span>
</span><span class='line'>cpan
</span><span class='line'>&gt; install IO::AIO
</span><span class='line'>&gt; install MogileFS::Client
</span><span class='line'>&gt; install MogileFS::Utils
</span><span class='line'><span class="c">#如果有问题直接用force install</span>
</span><span class='line'>&gt; install MogileFS::Server
</span></code></pre></td></tr></table></div></figure>


<h3>安装配置mysql</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#安装mysql</span>
</span><span class='line'>yum install mysql mysql-server
</span><span class='line'>mysqladmin -u root password 123456
</span><span class='line'><span class="c">#进入mysql,新建mogile用户</span>
</span><span class='line'>mysql -uroot -p123456
</span><span class='line'>mysql&gt; create database mogilefs;
</span><span class='line'>mysql&gt; grant all on mogilefs.* to mogile@localhost identified by <span class="s1">&#39;123456&#39;</span>;
</span><span class='line'>mysql&gt; flush privileges;
</span><span class='line'>
</span><span class='line'><span class="c">#导入mogilefs表</span>
</span><span class='line'>mogdbsetup --dbpass<span class="o">=</span>123456 --yes
</span></code></pre></td></tr></table></div></figure>


<h3>mogilefs配置</h3>

<ul>
<li>mogilefsd配置</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#/etc/mogilefs是默认的配置路径，-c可以修改</span>
</span><span class='line'>mkdir -p /etc/mogilefs
</span><span class='line'><span class="nb">cd</span> /etc/mogilefs
</span><span class='line'>vim mogilefsd.conf
</span><span class='line'>
</span><span class='line'><span class="c">#内容如下</span>
</span><span class='line'><span class="nv">pidfile</span> <span class="o">=</span> /tmp/mogilefsd.pid    <span class="c">#存放pid</span>
</span><span class='line'><span class="nv">daemonize</span> <span class="o">=</span> 1                   <span class="c">#守护进程</span>
</span><span class='line'>
</span><span class='line'><span class="nv">db_dsn</span>  <span class="o">=</span> DBI:mysql:mogilefs:127.0.0.1  <span class="c">#数据库配置</span>
</span><span class='line'><span class="nv">db_user</span> <span class="o">=</span> mogile
</span><span class='line'><span class="nv">db_pass</span> <span class="o">=</span> 123456
</span><span class='line'>
</span><span class='line'><span class="nv">conf_port</span> <span class="o">=</span> 7001                <span class="c">#监听端口</span>
</span><span class='line'><span class="nv">node_timeout</span> <span class="o">=</span> 2                <span class="c">#节点超时时间 </span>
</span><span class='line'><span class="nv">rebalance_ignore_missing</span> <span class="o">=</span> 1    <span class="c">#rebalance时会删除文件，删除时如果找不到文件不报错直接跳过 </span>
</span><span class='line'>
</span><span class='line'><span class="nv">query_jobs</span> <span class="o">=</span> 20                 <span class="c">#正真处理请求的job个数</span>
</span><span class='line'><span class="nv">delete_jobs</span> <span class="o">=</span> 3                 <span class="c">#处理删除队列的job个数</span>
</span><span class='line'><span class="nv">replicate_jobs</span> <span class="o">=</span> 5              <span class="c">#处理复制队列的job个数</span>
</span><span class='line'><span class="nv">reaper_jobs</span> <span class="o">=</span> 1                 <span class="c">#设备设置为dead后，处理补救工作的job个数 </span>
</span><span class='line'>                                <span class="c">#其实还有其他job，默认为1个</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>mogstored配置</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#设置文件存储路径，不要忘记修改拥有者</span>
</span><span class='line'>mkdir -p /var/mogdata
</span><span class='line'>adduser --gid daemon mogile
</span><span class='line'>chown mogile.daemon /var/mogdata
</span><span class='line'>vim mogstored.conf
</span><span class='line'>
</span><span class='line'><span class="c">#内容如下</span>
</span><span class='line'><span class="nv">httplisten</span> <span class="o">=</span> 0.0.0.0:7500       <span class="c">#文件存储端口</span>
</span><span class='line'><span class="nv">mgmtlisten</span> <span class="o">=</span> 0.0.0.0:7501       <span class="c">#监控磁盘状态端口</span>
</span><span class='line'><span class="nv">docroot</span> <span class="o">=</span> /var/mogdata          <span class="c">#文件存储路径</span>
</span><span class='line'>
</span><span class='line'><span class="nv">pidfile</span> <span class="o">=</span> /tmp/mogstored.pid    <span class="c">#存储pid</span>
</span><span class='line'><span class="nv">daemonize</span> <span class="o">=</span> 1                   <span class="c">#守护进程</span>
</span></code></pre></td></tr></table></div></figure>


<h3>启动mogilefs</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim /etc/security/limits.conf
</span><span class='line'><span class="c">#内容如下，让mogile可以打开更多的连接数</span>
</span><span class='line'>mogile soft nofile 65535
</span><span class='line'>mogile hard nofile 65535
</span><span class='line'>
</span><span class='line'><span class="c">#切换用户启动</span>
</span><span class='line'>su mogile -c <span class="s1">&#39;mogstored&#39;</span>
</span><span class='line'>su mogile -c <span class="s1">&#39;mogilefsd&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">#验证已经启动成功</span>
</span><span class='line'>ps auxf | grep mogile
</span><span class='line'>mogadm check
</span></code></pre></td></tr></table></div></figure>


<h3>已经安装好了，接来应该做点什么呢</h3>

<ul>
<li>学习mogadm指令，因为mogadm是必会工具</li>
<li>试着client连接mogilefsd存储文件吧</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Time::HiRes介绍]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/22/time-hiresjie-shao/"/>
    <updated>2012-11-22T17:18:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/22/time-hiresjie-shao</id>
    <content type="html"><![CDATA[<h3>Time::HiRes库介绍</h3>

<ul>
<li>HiRes是high resolution的简写，译为高分辨率</li>
<li>HiRes其实是提供一些更高精度的alarm, sleep, gettimeofday, interval timers</li>
</ul>


<!-- more -->


<h3>usleep，nanosleep实例</h3>

<ul>
<li>usleep参数是微妙</li>
<li>nanosleep参数是纳秒</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nn">Time::HiRes::</span><span class="n">usleep</span><span class="p">(</span><span class="mi">100_000</span><span class="p">);</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;100 milliseconds\n&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nn">Time::HiRes::</span><span class="n">nanosleep</span><span class="p">(</span><span class="mi">1000_000_000</span><span class="p">);</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;1 seconds\n&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ualarm实例</h3>

<ul>
<li>ualarm(0)会撤销警告信号</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">eval</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">local</span> <span class="nv">$SIG</span><span class="p">{</span><span class="n">ALRM</span><span class="p">}</span> <span class="o">=</span> <span class="k">sub </span><span class="p">{</span> <span class="nb">die</span> <span class="s">&quot;receive signal\n&quot;</span> <span class="p">};</span>
</span><span class='line'>    <span class="nn">Time::HiRes::</span><span class="n">ualarm</span> <span class="mi">1000_000</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">sleep</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;never print&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="vg">$@</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">print</span> <span class="vg">$@</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nb">eval</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">local</span> <span class="nv">$SIG</span><span class="p">{</span><span class="n">ALRM</span><span class="p">}</span> <span class="o">=</span> <span class="k">sub </span><span class="p">{</span> <span class="nb">die</span> <span class="s">&quot;receive signal\n&quot;</span> <span class="p">};</span>
</span><span class='line'>    <span class="nn">Time::HiRes::</span><span class="n">ualarm</span> <span class="mi">2000_000</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">sleep</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="nn">Time::HiRes::</span><span class="n">ualarm</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">#cancel alarm</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="vg">$@</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">print</span> <span class="vg">$@</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;cancel alarm signal\n&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>tv_interval和gettimeofday实例</h3>

<ul>
<li>tv_interval返回两个gettimeofday引用相差的秒数</li>
<li>省略tv_interval的第二个参数，会自动使用当前时间代替</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">my</span> <span class="nv">@start</span> <span class="o">=</span> <span class="nn">Time::HiRes::</span><span class="n">gettimeofday</span><span class="p">;</span>
</span><span class='line'><span class="k">print</span> <span class="n">Dumper</span><span class="p">(</span><span class="o">\</span><span class="nv">@start</span><span class="p">);</span>
</span><span class='line'><span class="nb">sleep</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$diff</span> <span class="o">=</span> <span class="nn">Time::HiRes::</span><span class="n">tv_interval</span><span class="p">(</span><span class="o">\</span><span class="nv">@start</span><span class="p">);</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;$diff\n&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>setitimer实例</h3>

<ol>
<li>ITIMER_REAL: 真实时间</li>
<li>ITIMER_VIRTUAL: 用户时间</li>
<li><p>ITIMER_PROF: 系统时间</p></li>
<li><p>getitimer可以取得setitimer还有多久开始执行</p></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">use</span> <span class="nn">Time::</span><span class="n">HiRes</span> <span class="sx">qw ( </span><span class="n">setitimer</span> <span class="n">ITIMER_VIRTUAL</span> <span class="nb">time</span> <span class="p">);</span>
</span><span class='line'><span class="nv">$SIG</span><span class="p">{</span><span class="n">VTALRM</span><span class="p">}</span> <span class="o">=</span> <span class="k">sub </span><span class="p">{</span> <span class="k">print</span> <span class="nb">time</span><span class="p">,</span> <span class="s">&quot;\n&quot;</span> <span class="p">};</span>
</span><span class='line'><span class="n">setitimer</span><span class="p">(</span><span class="n">ITIMER_VIRTUAL</span><span class="p">,</span> <span class="mf">3.5</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">){</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mongodb实战]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/22/mongodbshi-zhan/"/>
    <updated>2012-11-22T17:18:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/22/mongodbshi-zhan</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[log4j介绍]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/22/log4jjie-shao/"/>
    <updated>2012-11-22T17:18:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/22/log4jjie-shao</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[redis实战]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/22/redisshi-zhan/"/>
    <updated>2012-11-22T17:17:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/22/redisshi-zhan</id>
    <content type="html"><![CDATA[<h3>redis是什么？</h3>

<ul>
<li>redis是一个开源的，先进的key-value存储服务器端</li>
<li>value可以包含多种结构，比如strings, hashes, lists, sets ,sorted sets</li>
<li>官方网址：<a href="http://redis.io">http://redis.io</a></li>
<li><a href="http://www.wanghd.com/blog/2012/10/13/irc-irssishi-yong-jiao-cheng/">freenode</a>的聊天室名称是#redis</li>
</ul>


<!-- more -->


<h3>安装redis</h3>

<ul>
<li>mac下安装redis非常简单</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install redis
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>linux下的安装步骤如下</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#下载，解压和编译</span>
</span><span class='line'><span class="nv">$ </span>wget http://redis.googlecode.com/files/redis-2.6.5.tar.gz
</span><span class='line'><span class="nv">$ </span>tar xzf redis-2.6.5.tar.gz
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>redis-2.6.5
</span><span class='line'><span class="nv">$ </span>make
</span></code></pre></td></tr></table></div></figure>


<h3>配置redis</h3>

<ul>
<li>redis的默认配置文件是redis.conf，里面有详细的注释</li>
<li>下面是简单的单台redis配置</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#base</span>
</span><span class='line'>daemonize yes                       <span class="c">#守护进程</span>
</span><span class='line'>port 6379                           <span class="c">#监听端口</span>
</span><span class='line'><span class="nb">bind </span>127.0.0.1                      <span class="c">#绑定的ip地址</span>
</span><span class='line'>timeout 0                           <span class="c">#断开空闲的客户端时间</span>
</span><span class='line'>loglevel notice                     <span class="c">#记录到错误日志的等级</span>
</span><span class='line'>logfile /usr/local/log/redis.log    <span class="c">#记录的日志文件</span>
</span><span class='line'>databases 16                        <span class="c">#可以选择的db个数</span>
</span><span class='line'>
</span><span class='line'><span class="c">#rdb默认开启的持久化模式</span>
</span><span class='line'>save 900 1                          <span class="c">#save &lt;秒&gt; &lt;改变个数&gt;             </span>
</span><span class='line'>save 300 10
</span><span class='line'>save 60 10000
</span><span class='line'>stop-writes-on-bgsave-error yes     <span class="c">#当bgsave错误时停止rdb写入</span>
</span><span class='line'>rdbcompression yes                  <span class="c">#采用LZF压缩</span>
</span><span class='line'>rdbchecksum yes                     <span class="c">#校验和</span>
</span><span class='line'>dbfilename dump.rdb                 <span class="c">#保存的文件名</span>
</span><span class='line'>dir /usr/local/var/db/redis/        <span class="c">#保存的路径</span>
</span></code></pre></td></tr></table></div></figure>


<h3>启动redis server端</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>redis-server <span class="o">[</span>/path/to/redis.conf<span class="o">]</span>         <span class="c">#mac</span>
</span><span class='line'><span class="nv">$ </span>src/redis-server <span class="o">[</span>/path/to/redis.conf<span class="o">]</span>     <span class="c">#linux</span>
</span></code></pre></td></tr></table></div></figure>


<h3>打开client端，并测试</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>redis-cli             <span class="c">#mac</span>
</span><span class='line'><span class="nv">$ </span>src/redis-cli         <span class="c">#linux</span>
</span><span class='line'>
</span><span class='line'>redis&gt; <span class="nb">set </span>name wanghuida
</span><span class='line'>OK
</span><span class='line'>redis&gt; get name
</span><span class='line'><span class="s2">&quot;wanghuida&quot;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修复mogilefs目录owner]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/22/xiu-fu-mogilefsmu-lu-owner/"/>
    <updated>2012-11-22T17:16:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/22/xiu-fu-mogilefsmu-lu-owner</id>
    <content type="html"><![CDATA[<h3>什么情况会导致mogilefs的数据目录owner不正确</h3>

<ul>
<li>直接使用root启动mogstored会导致增加的文件和文件夹为root</li>
<li>重新用mogile启动mogstored后，mogile用户无法删除root的文件，最终delete队列无法处理</li>
</ul>


<h3>如何处理</h3>

<ol>
<li>直接chown -R，这是最直接的方法，如果1T的磁盘被这样操作，会10小时util为100</li>
<li>自己写一个脚本慢处理，脚本思路如下</li>
</ol>


<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">package</span> <span class="n">MtChown</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Data::</span><span class="n">Dumper</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">Carp</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Time::</span><span class="n">HiRes</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">run</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="p">(</span><span class="nv">$dir</span><span class="p">,</span><span class="nv">$user</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$dir</span><span class="p">)</span> <span class="o">||</span> <span class="o">!</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$user</span><span class="p">)){</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;please set option [-D|--dir -u|--user]\n&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nv">$dir</span> <span class="o">=~</span> <span class="sr">s/(.+)\/$/$1/i</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">croak</span><span class="p">(</span><span class="s">&quot;[$dir] isn&#39;t a directory or file&quot;</span><span class="p">)</span> <span class="k">unless</span> <span class="p">(</span><span class="o">-</span><span class="n">f</span> <span class="nv">$dir</span> <span class="ow">or</span> <span class="o">-</span><span class="n">d</span> <span class="nv">$dir</span><span class="p">);</span>
</span><span class='line'>    <span class="k">my</span> <span class="p">(</span><span class="nv">$login</span><span class="p">,</span><span class="nv">$pass</span><span class="p">,</span><span class="nv">$uid</span><span class="p">,</span><span class="nv">$gid</span><span class="p">)</span> <span class="o">=</span> <span class="nb">getpwnam</span><span class="p">(</span><span class="nv">$user</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;$user not in passwd file&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">carp</span><span class="p">(</span><span class="s">&quot;$uid,$gid&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">process</span><span class="p">(</span><span class="nv">$dir</span><span class="p">,</span><span class="nv">$uid</span><span class="p">,</span><span class="nv">$gid</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">process</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="p">(</span><span class="nv">$dir</span><span class="p">,</span><span class="nv">$u</span><span class="p">,</span><span class="nv">$g</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">-</span><span class="n">d</span> <span class="nv">$dir</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">opendir</span><span class="p">(</span><span class="n">FILE</span><span class="p">,</span><span class="nv">$dir</span><span class="p">)</span> <span class="ow">or</span> <span class="n">croak</span><span class="p">(</span><span class="s">&quot;opendir error [$dir]&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">@files</span> <span class="o">=</span> <span class="nb">readdir</span><span class="p">(</span><span class="n">FILE</span><span class="p">);</span>
</span><span class='line'>        <span class="nb">closedir</span><span class="p">(</span><span class="n">FILE</span><span class="p">);</span>
</span><span class='line'>        <span class="k">foreach</span> <span class="p">(</span><span class="nv">@files</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">next</span> <span class="k">if</span> <span class="p">(</span><span class="nv">$_</span> <span class="ow">eq</span> <span class="s">&#39;.&#39;</span> <span class="o">||</span> <span class="nv">$_</span> <span class="ow">eq</span> <span class="s">&#39;..&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">my</span> <span class="nv">$tmp_dir</span> <span class="o">=</span> <span class="s">&quot;$dir/$_&quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">-</span><span class="n">d</span> <span class="nv">$tmp_dir</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">process</span><span class="p">(</span><span class="nv">$tmp_dir</span><span class="p">,</span><span class="nv">$u</span><span class="p">,</span><span class="nv">$g</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span><span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">chowner</span><span class="p">(</span><span class="nv">$u</span><span class="p">,</span><span class="nv">$g</span><span class="p">,</span><span class="nv">$tmp_dir</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">chowner</span><span class="p">(</span><span class="nv">$u</span><span class="p">,</span><span class="nv">$g</span><span class="p">,</span><span class="nv">$dir</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">chowner</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="p">(</span><span class="nv">$u</span><span class="p">,</span><span class="nv">$g</span><span class="p">,</span><span class="nv">$dir</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>    <span class="k">my</span> <span class="p">(</span><span class="nv">$dev</span><span class="p">,</span><span class="nv">$ino</span><span class="p">,</span><span class="nv">$mode</span><span class="p">,</span><span class="nv">$nlink</span><span class="p">,</span><span class="nv">$uid</span><span class="p">,</span><span class="nv">$gid</span><span class="p">,</span><span class="nv">$rdev</span><span class="p">,</span><span class="nv">$size</span><span class="p">,</span><span class="nv">$atime</span><span class="p">,</span><span class="nv">$mtime</span><span class="p">,</span><span class="nv">$ctime</span><span class="p">,</span><span class="nv">$blksize</span><span class="p">,</span><span class="nv">$blocks</span><span class="p">)</span> <span class="o">=</span> <span class="nb">stat</span><span class="p">(</span><span class="nv">$dir</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nv">$u</span> <span class="o">!=</span> <span class="nv">$uid</span> <span class="o">||</span> <span class="nv">$g</span> <span class="o">!=</span> <span class="nv">$gid</span><span class="p">){</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$ret</span> <span class="o">=</span> <span class="nb">chown</span> <span class="nv">$u</span><span class="p">,</span><span class="nv">$g</span><span class="p">,(</span><span class="nv">$dir</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$ret</span> <span class="o">&lt;=</span> <span class="mi">0</span> <span class="p">?</span> <span class="n">carp</span><span class="p">(</span><span class="s">&quot;chown [$u,$g,$dir] error&quot;</span><span class="p">)</span> <span class="p">:</span> <span class="n">carp</span><span class="p">(</span><span class="s">&quot;chown [$u,$g,$dir] success&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$microsec</span> <span class="o">=</span> <span class="mi">50_000</span><span class="p">;</span>
</span><span class='line'>    <span class="nn">Time::HiRes::</span><span class="n">usleep</span><span class="p">(</span><span class="nv">$microsec</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装配置hive]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/10/an-zhuang-pei-zhi-hive/"/>
    <updated>2012-11-10T14:59:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/10/an-zhuang-pei-zhi-hive</id>
    <content type="html"><![CDATA[<ul>
<li>先安装hadoop请参考<a href="http://www.wanghd.com/blog/2012/11/02/an-zhuang-pei-zhi-hadoop/">这篇文章</a></li>
<li>hive介绍：通过类似于sql语句的方式去计算结果，数据都存放在hdfs</li>
</ul>


<h3>下载并解压hive</h3>

<ul>
<li>给个官方<a href="http://www.apache.org/dyn/closer.cgi/hive/">链接</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tar -xzvf hive-x.y.z.tar.gz
</span><span class='line'>cd hive-x.y.z
</span><span class='line'>PATH=$PATH:/Users/william/project/hadoop-1.0.4/bin:/Users/william/project/hive-0.8.1/bin
</span><span class='line'>. ~/.bash_profile</span></code></pre></td></tr></table></div></figure>


<ul>
<li>直接在终端输入hive，然后输入show tables;然会OK，就行了</li>
</ul>


<!-- more -->


<h3>创建测试表</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>create table test (id INT,name STRING);
</span><span class='line'>create table test2 (id INT,name STRING) partitioned by (ds STRING);
</span><span class='line'>create table result (id int,name string);</span></code></pre></td></tr></table></div></figure>


<h3>导入数据</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>load data local inpath '/Users/william/project/hive-0.8.1/examples/files/kv1.txt' overwrite into table test;
</span><span class='line'>load data local inpath '/Users/william/project/hive-0.8.1/examples/files/kv2.txt' overwrite into table test2 partition (ds='2012-10-01');
</span><span class='line'>load data local inpath '/Users/william/project/hive-0.8.1/examples/files/kv3.txt' overwrite into table test2 partition (ds='2012-10-02');</span></code></pre></td></tr></table></div></figure>


<h3>操作数据</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>select count(*) from test2 where ds='2012-10-01';
</span><span class='line'>insert overwrite directory '/tmp/hdfs_out' select t.* from test2 t where t.ds='2012-10-01';
</span><span class='line'>insert overwrite local directory '/tmp/local_out' select a.* from test a;
</span><span class='line'>insert overwrite table result select a.* from test a where a.id &lt; 100;</span></code></pre></td></tr></table></div></figure>


<h3>换种风格操作数据</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>from test t                                                                 
</span><span class='line'>    insert overwrite directory '/tmp/other_out' select t.* where t.id &lt; 60      
</span><span class='line'>    insert overwrite local directory '/tmp/other_out2' select t.* where t.id &gt; 60;</span></code></pre></td></tr></table></div></figure>


<ul>
<li>还可以自己写脚本做数据转换器</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[perl父进程监听，子进程工作实例]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/08/perlfu-jin-cheng-jian-ting-zi-jin-cheng-gong-zuo-shi-li/"/>
    <updated>2012-11-08T22:15:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/08/perlfu-jin-cheng-jian-ting-zi-jin-cheng-gong-zuo-shi-li</id>
    <content type="html"><![CDATA[<ol>
<li>构造后台进程</li>
<li>主进程监到连接，创建子进程接收消息并处理消息</li>
<li>主进程继续监听，同时非阻塞的回收子进程</li>
</ol>


<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#!/usr/bin/perl</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">IO::</span><span class="n">Socket</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">Socket</span> <span class="sx">qw(SO_KEEPALIVE)</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">IO::</span><span class="n">Poll</span><span class="p">;</span>
</span><span class='line'><span class="c1">#POSIX标准是必须要的，否则waitpid会阻塞住</span>
</span><span class='line'><span class="k">use</span> <span class="n">POSIX</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">Carp</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">Errno</span>  <span class="sx">qw(EINPROGRESS EWOULDBLOCK EISCONN ENOTSOCK</span>
</span><span class='line'><span class="sx">              EPIPE EAGAIN EBADF ECONNRESET ENOPROTOOPT)</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="vg">$|</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="n">daemonize</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">my</span> <span class="nv">$server</span> <span class="o">=</span> <span class="nn">IO::Socket::</span><span class="n">INET</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="n">LocalAddr</span> <span class="o">=&gt;</span> <span class="s">&quot;0.0.0.0:5678&quot;</span><span class="p">,</span>
</span><span class='line'>                                   <span class="n">Type</span>      <span class="o">=&gt;</span> <span class="n">SOCK_STREAM</span><span class="p">,</span>
</span><span class='line'>                                   <span class="n">Proto</span>     <span class="o">=&gt;</span> <span class="s">&#39;tcp&#39;</span><span class="p">,</span>
</span><span class='line'>                                   <span class="n">Blocking</span>  <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                                   <span class="n">Reuse</span>     <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>                                   <span class="n">Listen</span>    <span class="o">=&gt;</span> <span class="mi">1024</span> <span class="p">)</span>
</span><span class='line'>    <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;Error creating socket: $@\n&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$server</span><span class="o">-&gt;</span><span class="n">sockopt</span><span class="p">(</span><span class="n">SO_KEEPALIVE</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="k">my</span> <span class="nv">$pid</span> <span class="o">=</span> <span class="nb">waitpid</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">WNOHANG</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">#print &quot;child[$pid] closed\n&quot; if($pid &gt; 0);</span>
</span><span class='line'>        <span class="k">last</span> <span class="k">unless</span> <span class="nv">$pid</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="k">my</span> <span class="nv">$csock</span> <span class="o">=</span> <span class="nv">$server</span><span class="o">-&gt;</span><span class="nb">accept</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$pid</span> <span class="o">=</span> <span class="nb">fork</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nv">$pid</span><span class="p">){</span>
</span><span class='line'>            <span class="nb">close</span><span class="p">(</span><span class="nv">$csock</span><span class="p">);</span>
</span><span class='line'>            <span class="nb">undef</span> <span class="nv">$csock</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>            <span class="nv">$0</span> <span class="o">.=</span> <span class="s">&quot; [perl child]&quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">my</span> <span class="nv">$buf</span><span class="p">;</span>
</span><span class='line'>                <span class="k">my</span> <span class="nv">$len</span> <span class="o">=</span> <span class="nb">sysread</span><span class="p">(</span><span class="nv">$csock</span><span class="p">,</span> <span class="nv">$buf</span><span class="p">,</span> <span class="mi">1048576</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>                <span class="n">work</span><span class="p">(</span><span class="nv">$buf</span><span class="p">);</span>
</span><span class='line'>                <span class="k">last</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$len</span> <span class="o">&amp;&amp;</span> <span class="vg">$!</span> <span class="o">!=</span> <span class="n">EWOULDBLOCK</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nb">exit</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#子进程的工作</span>
</span><span class='line'><span class="k">sub </span><span class="nf">work</span><span class="p">{</span>
</span><span class='line'>    <span class="k">print</span> <span class="nv">@_</span><span class="o">.</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">daemonize</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span><span class="p">(</span><span class="nv">$pid</span><span class="p">,</span> <span class="nv">$sess_id</span><span class="p">,</span> <span class="nv">$i</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$pid</span> <span class="o">=</span> <span class="nb">fork</span><span class="p">)</span> <span class="p">{</span> <span class="nb">exit</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">croak</span> <span class="s">&quot;Cannot detach from controlling terminal&quot;</span>
</span><span class='line'>        <span class="k">unless</span> <span class="nv">$sess_id</span> <span class="o">=</span> <span class="nn">POSIX::</span><span class="n">setsid</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$SIG</span><span class="p">{</span><span class="s">&#39;HUP&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="s">&#39;IGNORE&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$pid</span> <span class="o">=</span> <span class="nb">fork</span><span class="p">)</span> <span class="p">{</span> <span class="nb">exit</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">chdir</span> <span class="s">&quot;/&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">umask</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nginx反向代理自动urldecode问题]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/07/nginxfan-xiang-dai-li-zi-dong-urldecodewen-ti/"/>
    <updated>2012-11-07T16:40:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/07/nginxfan-xiang-dai-li-zi-dong-urldecodewen-ti</id>
    <content type="html"><![CDATA[<h3>今天妖孽了，发现nginx反向代理会自动urldecode</h3>

<ul>
<li>同事监控两个nginx的access_log，惊人的发现日志里的url不同</li>
<li>去掉反斜杠就ok了，不太清楚nginx内部是如何处理的</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>location / {
</span><span class='line'>    proxy_pass        http://localhost:8000/;
</span><span class='line'>}
</span><span class='line'>#修改为下面这样后，一切OK了
</span><span class='line'>location / {
</span><span class='line'>    proxy_pass        http://localhost:8000;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mogilefs删除队列]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/06/mogilefsshan-chu-dui-lie/"/>
    <updated>2012-11-06T19:31:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/06/mogilefsshan-chu-dui-lie</id>
    <content type="html"><![CDATA[<h3>遇到的问题</h3>

<ul>
<li>发现file_to_delete2队列表里有500万记录，奇怪这些文件为什么要删除？心里不踏实，寻找根源&#8230;</li>
<li>在队列中随便拿一个fid，在file表里查竟然是空的，再找file_on表竟然有数据&#8230;</li>
</ul>


<h3>什么时候会插入fid到删除队列呢</h3>

<ol>
<li>cmd_create_close时，如果连接终端，文件大小等不正确，会增加到删除队列</li>
<li>cmd_create_close时，如果同一domain下key已经存在，那么会去删除原有的文件(两份文件key相同，但是fid不同，我的问题就出在这)</li>
<li>mogdelete工具会删除memcache和file表的文件记录，并运用删除队列删除磁盘上的文件和file_on表</li>
<li>client调用delete方法，和mogdelete一样</li>
</ol>


<!-- more -->


<h3>cmd_create_close逻辑</h3>

<ul>
<li>mogilefs上传文件的逻辑是先问tracker拿文件存储路径，然后上传文件到一个storage，最后调用cmd_create_close方法插入数据记录和replicate队列</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">sub </span><span class="nf">cmd_create_close</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nn">MogileFS::Worker::</span><span class="n">Query</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$args</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># has to be filled out for some plugins</span>
</span><span class='line'>    <span class="nv">$args</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">dmid</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">check_domain</span><span class="p">(</span><span class="nv">$args</span><span class="p">)</span>
</span><span class='line'>        <span class="ow">or</span> <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">err_line</span><span class="p">(</span><span class="s">&#39;domain_not_found&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># call out to a hook that might modify the arguments for us</span>
</span><span class='line'>    <span class="c1"># 调用插件用的钩子，一般是没的</span>
</span><span class='line'>    <span class="nn">MogileFS::</span><span class="n">run_global_hook</span><span class="p">(</span><span class="s">&#39;cmd_create_close&#39;</span><span class="p">,</span> <span class="nv">$args</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># late validation of parameters</span>
</span><span class='line'>    <span class="c1"># 设置下面使用的变量</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$dmid</span>  <span class="o">=</span> <span class="nv">$args</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">dmid</span><span class="p">};</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$key</span>   <span class="o">=</span> <span class="nv">$args</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">key</span><span class="p">};</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$fidid</span> <span class="o">=</span> <span class="nv">$args</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">fid</span><span class="p">}</span>    <span class="ow">or</span> <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">err_line</span><span class="p">(</span><span class="s">&quot;no_fid&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$devid</span> <span class="o">=</span> <span class="nv">$args</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">devid</span><span class="p">}</span>  <span class="ow">or</span> <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">err_line</span><span class="p">(</span><span class="s">&quot;no_devid&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$path</span>  <span class="o">=</span> <span class="nv">$args</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">path</span><span class="p">}</span>   <span class="ow">or</span> <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">err_line</span><span class="p">(</span><span class="s">&quot;no_path&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$checksum</span> <span class="o">=</span> <span class="nv">$args</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">checksum</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$checksum</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$checksum</span> <span class="o">=</span> <span class="nb">eval</span> <span class="p">{</span> <span class="nn">MogileFS::</span><span class="n">Checksum</span><span class="o">-&gt;</span><span class="n">from_string</span><span class="p">(</span><span class="nv">$fidid</span><span class="p">,</span> <span class="nv">$checksum</span><span class="p">)</span> <span class="p">};</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">err_line</span><span class="p">(</span><span class="s">&quot;invalid_checksum_format&quot;</span><span class="p">)</span> <span class="k">if</span> <span class="vg">$@</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 初始化fid和dfid对象</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$fid</span>  <span class="o">=</span> <span class="nn">MogileFS::</span><span class="n">FID</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="nv">$fidid</span><span class="p">);</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$dfid</span> <span class="o">=</span> <span class="nn">MogileFS::</span><span class="n">DevFID</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="nv">$devid</span><span class="p">,</span> <span class="nv">$fid</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># is the provided path what we&#39;d expect for this fid/devid?</span>
</span><span class='line'>    <span class="c1"># 验证是否为伪造路径</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">err_line</span><span class="p">(</span><span class="s">&quot;bogus_args&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">unless</span> <span class="nv">$path</span> <span class="ow">eq</span> <span class="nv">$dfid</span><span class="o">-&gt;</span><span class="n">url</span><span class="p">;</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$sto</span> <span class="o">=</span> <span class="nn">Mgd::</span><span class="n">get_store</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># find the temp file we&#39;re closing and making real.  If another worker</span>
</span><span class='line'>    <span class="c1"># already has it, bail out---the client closed it twice.</span>
</span><span class='line'>    <span class="c1"># this is racy, but the only expected use case is a client retrying.</span>
</span><span class='line'>    <span class="c1"># should still be fixed better once more scalable locking is available.</span>
</span><span class='line'>    <span class="c1"># 取得零时文件数据,并删除掉</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$trow</span> <span class="o">=</span> <span class="nv">$sto</span><span class="o">-&gt;</span><span class="n">delete_and_return_tempfile_row</span><span class="p">(</span><span class="nv">$fidid</span><span class="p">)</span> <span class="ow">or</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">err_line</span><span class="p">(</span><span class="s">&quot;no_temp_file&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Protect against leaving orphaned uploads.</span>
</span><span class='line'>    <span class="c1"># 定义错误函数，可以看到$fid-&gt;delete会删除file表记录并插入删除队列</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$failed</span> <span class="o">=</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>        <span class="nv">$dfid</span><span class="o">-&gt;</span><span class="n">add_to_db</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$fid</span><span class="o">-&gt;</span><span class="nb">delete</span><span class="p">;</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 验证设备</span>
</span><span class='line'>    <span class="k">unless</span> <span class="p">(</span><span class="nv">$trow</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">devids</span><span class="p">}</span> <span class="o">=~</span> <span class="sr">m/\b$devid\b/</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$failed</span><span class="o">-&gt;</span><span class="p">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">err_line</span><span class="p">(</span><span class="s">&quot;invalid_destdev&quot;</span><span class="p">,</span> <span class="s">&quot;File uploaded to invalid dest $devid. Valid devices were: &quot;</span> <span class="o">.</span> <span class="nv">$trow</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">devids</span><span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># if a temp file is closed without a provided-key, that means to</span>
</span><span class='line'>    <span class="c1"># delete it.</span>
</span><span class='line'>    <span class="c1"># 验证key</span>
</span><span class='line'>    <span class="k">unless</span> <span class="p">(</span><span class="nb">defined</span> <span class="nv">$key</span> <span class="o">&amp;&amp;</span> <span class="nb">length</span><span class="p">(</span><span class="nv">$key</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$failed</span><span class="o">-&gt;</span><span class="p">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">ok_line</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># get size of file and verify that it matches what we were given, if anything</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$httpfile</span> <span class="o">=</span> <span class="nn">MogileFS::</span><span class="n">HTTPFile</span><span class="o">-&gt;</span><span class="n">at</span><span class="p">(</span><span class="nv">$path</span><span class="p">);</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$size</span> <span class="o">=</span> <span class="nv">$httpfile</span><span class="o">-&gt;</span><span class="n">size</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># size check is optional? Needs to support zero byte files.</span>
</span><span class='line'>    <span class="c1"># 验证文件大小</span>
</span><span class='line'>    <span class="nv">$args</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">size</span><span class="p">}</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span> <span class="k">unless</span> <span class="nv">$args</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">size</span><span class="p">};</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$size</span><span class="p">)</span> <span class="o">||</span> <span class="nv">$size</span> <span class="o">==</span> <span class="nn">MogileFS::HTTPFile::</span><span class="n">FILE_MISSING</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1"># storage node is unreachable or the file is missing</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$type</span>    <span class="o">=</span> <span class="nb">defined</span> <span class="nv">$size</span> <span class="p">?</span> <span class="s">&quot;missing&quot;</span> <span class="p">:</span> <span class="s">&quot;cantreach&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$lasterr</span> <span class="o">=</span> <span class="nn">MogileFS::Util::</span><span class="n">last_error</span><span class="p">();</span>
</span><span class='line'>        <span class="nv">$failed</span><span class="o">-&gt;</span><span class="p">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">err_line</span><span class="p">(</span><span class="s">&quot;size_verify_error&quot;</span><span class="p">,</span> <span class="s">&quot;Expected: $args-&gt;{size}; actual: 0 ($type); path: $path; error: $lasterr&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$args</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">size</span><span class="p">}</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nv">$args</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">size</span><span class="p">}</span> <span class="o">!=</span> <span class="nv">$size</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$failed</span><span class="o">-&gt;</span><span class="p">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">err_line</span><span class="p">(</span><span class="s">&quot;size_mismatch&quot;</span><span class="p">,</span> <span class="s">&quot;Expected: $args-&gt;{size}; actual: $size; path: $path&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># checksum validation is optional as it can be very expensive</span>
</span><span class='line'>    <span class="c1"># However, we /always/ verify it if the client wants us to, even</span>
</span><span class='line'>    <span class="c1"># if the class does not enforce or store it.</span>
</span><span class='line'>    <span class="c1"># 校验和</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$checksum</span> <span class="o">&amp;&amp;</span> <span class="nv">$args</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">checksumverify</span><span class="p">})</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$alg</span> <span class="o">=</span> <span class="nv">$checksum</span><span class="o">-&gt;</span><span class="n">hashname</span><span class="p">;</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$actual</span> <span class="o">=</span> <span class="nv">$httpfile</span><span class="o">-&gt;</span><span class="n">digest</span><span class="p">(</span><span class="nv">$alg</span><span class="p">,</span> <span class="k">sub </span><span class="p">{</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">still_alive</span> <span class="p">});</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$actual</span> <span class="ow">ne</span> <span class="nv">$checksum</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">checksum</span><span class="p">})</span> <span class="p">{</span>
</span><span class='line'>            <span class="nv">$failed</span><span class="o">-&gt;</span><span class="p">();</span>
</span><span class='line'>            <span class="nv">$actual</span> <span class="o">=</span> <span class="s">&quot;$alg:&quot;</span> <span class="o">.</span> <span class="nb">unpack</span><span class="p">(</span><span class="s">&quot;H*&quot;</span><span class="p">,</span> <span class="nv">$actual</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">err_line</span><span class="p">(</span><span class="s">&quot;checksum_mismatch&quot;</span><span class="p">,</span>
</span><span class='line'>                           <span class="s">&quot;Expected: $checksum; actual: $actual; path: $path&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1"># see if we have a fid for this key already</span>
</span><span class='line'>    <span class="c1"># 关键的来了，如果在同一个domain下有相同的key，那么删除该文件的file表记录，并插入delete队列</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$old_fid</span> <span class="o">=</span> <span class="nn">MogileFS::</span><span class="n">FID</span><span class="o">-&gt;</span><span class="n">new_from_dmid_and_key</span><span class="p">(</span><span class="nv">$dmid</span><span class="p">,</span> <span class="nv">$key</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$old_fid</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1"># Fail if a file already exists for this fid.  Should never</span>
</span><span class='line'>        <span class="c1"># happen, as it should not be possible to close a file twice.</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">err_line</span><span class="p">(</span><span class="s">&quot;fid_exists&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="k">unless</span> <span class="nv">$old_fid</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">fidid</span><span class="p">}</span> <span class="o">!=</span> <span class="nv">$fidid</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$old_fid</span><span class="o">-&gt;</span><span class="nb">delete</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># TODO: check for EIO?</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># insert file_on row</span>
</span><span class='line'>    <span class="c1"># 以上都没有问题，那么就确认保存文件到数据库</span>
</span><span class='line'>    <span class="c1"># 保存到file_on表</span>
</span><span class='line'>    <span class="nv">$dfid</span><span class="o">-&gt;</span><span class="n">add_to_db</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$checksum</span><span class="o">-&gt;</span><span class="n">maybe_save</span><span class="p">(</span><span class="nv">$dmid</span><span class="p">,</span> <span class="nv">$trow</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">classid</span><span class="p">})</span> <span class="k">if</span> <span class="nv">$checksum</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 保存到file表 </span>
</span><span class='line'>    <span class="nv">$sto</span><span class="o">-&gt;</span><span class="n">replace_into_file</span><span class="p">(</span>
</span><span class='line'>                            <span class="n">fidid</span>   <span class="o">=&gt;</span> <span class="nv">$fidid</span><span class="p">,</span>
</span><span class='line'>                            <span class="n">dmid</span>    <span class="o">=&gt;</span> <span class="nv">$dmid</span><span class="p">,</span>
</span><span class='line'>                            <span class="n">key</span>     <span class="o">=&gt;</span> <span class="nv">$key</span><span class="p">,</span>
</span><span class='line'>                            <span class="nb">length</span>  <span class="o">=&gt;</span> <span class="nv">$size</span><span class="p">,</span>
</span><span class='line'>                            <span class="n">classid</span> <span class="o">=&gt;</span> <span class="nv">$trow</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">classid</span><span class="p">},</span>
</span><span class='line'>                            <span class="n">devcount</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>                            <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># mark it as needing replicating:</span>
</span><span class='line'>    <span class="c1"># 插入文件到replicate队列 </span>
</span><span class='line'>    <span class="nv">$fid</span><span class="o">-&gt;</span><span class="n">enqueue_for_replication</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># call the hook - if this fails, we need to back the file out</span>
</span><span class='line'>    <span class="c1"># 调用钩子</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$rv</span> <span class="o">=</span> <span class="nn">MogileFS::</span><span class="n">run_global_hook</span><span class="p">(</span><span class="s">&#39;file_stored&#39;</span><span class="p">,</span> <span class="nv">$args</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">defined</span> <span class="nv">$rv</span> <span class="o">&amp;&amp;</span> <span class="o">!</span> <span class="nv">$rv</span><span class="p">)</span> <span class="p">{</span> <span class="c1"># undef = no hooks, 1 = success, 0 = failure</span>
</span><span class='line'>        <span class="nv">$fid</span><span class="o">-&gt;</span><span class="nb">delete</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">err_line</span><span class="p">(</span><span class="s">&quot;plugin_aborted&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1"># all went well, we would&#39;ve hit condthrow on DB errors</span>
</span><span class='line'>    <span class="c1"># 返回正确结果</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">ok_line</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>总结为什么会出现这种现象</h3>

<ul>
<li>当在同一个domain下，上传相同key的文件，之前的文件会被删除，但是两个文件的fid是不同的</li>
<li>$fid->delete这个操作实际是删除memcache和file表数据，file_on表和磁盘上的文件交给队列来处理</li>
<li>作者考虑到删除文件是比较耗时的操作，所以交给队列慢慢处理，才会导致file表里没数据，但是file_on上仍有数据</li>
<li>如果可能，尽量避免上传相同的key，这样可以减少对db的读写操作(我准备优化)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[编写hadoop的Map-Reduce]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/04/bian-xie-hadoopde-map-reduce/"/>
    <updated>2012-11-04T21:12:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/04/bian-xie-hadoopde-map-reduce</id>
    <content type="html"><![CDATA[<h3>创建map-reduce项目</h3>

<ul>
<li>安装hadoop请参考<a href="http://www.wanghd.com/blog/2012/11/02/an-zhuang-pei-zhi-hadoop/">这篇文章</a></li>
<li>安装hadoop-plugin请参考<a href="http://www.wanghd.com/blog/2012/11/03/eclipsepei-zhi-hadoopde-map-reducekai-fa-huan-jing/">这篇文章</a></li>
</ul>


<p><img src="http://www.wanghd.com/images/post/new-mapred.png" title="new-mapred" alt="new-mapred" /></p>

<h3>创建测试数据</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /tmp
</span><span class='line'>mkdir input
</span><span class='line'>echo "hello world baby huida" &gt; t1.txt
</span><span class='line'>echo "world baby baby markdown" &gt; t2.txt
</span><span class='line'>
</span><span class='line'>bin/hadoop fs -put /tmp/input input
</span><span class='line'>bin/hadoop fs -ls</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h3>复制测试代码</h3>

<ul>
<li>hadoop源代码里的例子：/src/example/org/apache/hadoop/example/WordCount.java</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">org</span><span class="o">.</span><span class="na">anjuke</span><span class="o">.</span><span class="na">mapred</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.conf.Configuration</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.fs.Path</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.io.IntWritable</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.io.Text</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.mapreduce.Job</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.mapreduce.Mapper</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.mapreduce.Reducer</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.mapreduce.lib.input.FileInputFormat</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.mapreduce.lib.output.FileOutputFormat</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.util.GenericOptionsParser</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">WordCount</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">TokenizerMapper</span> <span class="kd">extends</span> <span class="n">Mapper</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">,</span> <span class="n">Text</span><span class="o">,</span> <span class="n">Text</span><span class="o">,</span> <span class="n">IntWritable</span><span class="o">&gt;{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">final</span> <span class="kd">static</span> <span class="n">IntWritable</span> <span class="n">one</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IntWritable</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Text</span> <span class="n">word</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Text</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">map</span><span class="o">(</span><span class="n">Object</span> <span class="n">key</span><span class="o">,</span> <span class="n">Text</span> <span class="n">value</span><span class="o">,</span> <span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">InterruptedException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">StringTokenizer</span> <span class="n">itr</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringTokenizer</span><span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">(</span><span class="n">itr</span><span class="o">.</span><span class="na">hasMoreTokens</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">word</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">itr</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
</span><span class='line'>        <span class="n">context</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">word</span><span class="o">,</span> <span class="n">one</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">IntSumReducer</span> <span class="kd">extends</span> <span class="n">Reducer</span><span class="o">&lt;</span><span class="n">Text</span><span class="o">,</span><span class="n">IntWritable</span><span class="o">,</span><span class="n">Text</span><span class="o">,</span><span class="n">IntWritable</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">IntWritable</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IntWritable</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">reduce</span><span class="o">(</span><span class="n">Text</span> <span class="n">key</span><span class="o">,</span> <span class="n">Iterable</span><span class="o">&lt;</span><span class="n">IntWritable</span><span class="o">&gt;</span> <span class="n">values</span><span class="o">,</span> <span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">InterruptedException</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="n">IntWritable</span> <span class="n">val</span> <span class="o">:</span> <span class="n">values</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">sum</span> <span class="o">+=</span> <span class="n">val</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">sum</span><span class="o">);</span>
</span><span class='line'>      <span class="n">context</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">key</span><span class="o">,</span> <span class="n">result</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Configuration</span> <span class="n">conf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Configuration</span><span class="o">();</span>
</span><span class='line'>    <span class="n">String</span><span class="o">[]</span> <span class="n">otherArgs</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GenericOptionsParser</span><span class="o">(</span><span class="n">conf</span><span class="o">,</span> <span class="n">args</span><span class="o">).</span><span class="na">getRemainingArgs</span><span class="o">();</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">otherArgs</span><span class="o">.</span><span class="na">length</span> <span class="o">!=</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Usage: wordcount &lt;in&gt; &lt;out&gt;&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">Job</span> <span class="n">job</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Job</span><span class="o">(</span><span class="n">conf</span><span class="o">,</span> <span class="s">&quot;word count&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">job</span><span class="o">.</span><span class="na">setJarByClass</span><span class="o">(</span><span class="n">WordCount</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="n">job</span><span class="o">.</span><span class="na">setMapperClass</span><span class="o">(</span><span class="n">TokenizerMapper</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="n">job</span><span class="o">.</span><span class="na">setCombinerClass</span><span class="o">(</span><span class="n">IntSumReducer</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="n">job</span><span class="o">.</span><span class="na">setReducerClass</span><span class="o">(</span><span class="n">IntSumReducer</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="n">job</span><span class="o">.</span><span class="na">setOutputKeyClass</span><span class="o">(</span><span class="n">Text</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="n">job</span><span class="o">.</span><span class="na">setOutputValueClass</span><span class="o">(</span><span class="n">IntWritable</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="n">FileInputFormat</span><span class="o">.</span><span class="na">addInputPath</span><span class="o">(</span><span class="n">job</span><span class="o">,</span> <span class="k">new</span> <span class="n">Path</span><span class="o">(</span><span class="n">otherArgs</span><span class="o">[</span><span class="mi">0</span><span class="o">]));</span>
</span><span class='line'>    <span class="n">FileOutputFormat</span><span class="o">.</span><span class="na">setOutputPath</span><span class="o">(</span><span class="n">job</span><span class="o">,</span> <span class="k">new</span> <span class="n">Path</span><span class="o">(</span><span class="n">otherArgs</span><span class="o">[</span><span class="mi">1</span><span class="o">]));</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="n">job</span><span class="o">.</span><span class="na">waitForCompletion</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">?</span> <span class="mi">0</span> <span class="o">:</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>运行实例</h3>

<ul>
<li>修改运行参数，根据自己的路径修改</li>
</ul>


<p><img src="http://www.wanghd.com/images/post/wordcount-conf.png" title="wordcount-conf" alt="wordcount-conf" /></p>

<ul>
<li>点击运行后看结果</li>
</ul>


<p><img src="http://www.wanghd.com/images/post/mapred-run.png" title="mapred-run" alt="mapred-run" /></p>

<p><img src="http://www.wanghd.com/images/post/wordcount-ret.png" title="wordcount-ret" alt="wordcount-ret" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[eclipse配置hadoop的map-reduce开发环境]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/03/eclipsepei-zhi-hadoopde-map-reducekai-fa-huan-jing/"/>
    <updated>2012-11-03T00:14:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/03/eclipsepei-zhi-hadoopde-map-reducekai-fa-huan-jing</id>
    <content type="html"><![CDATA[<h3>生成eclipse环境</h3>

<ul>
<li>安装hadoop请参考<a href="http://www.wanghd.com/blog/2012/11/02/an-zhuang-pei-zhi-hadoop/">这篇文章</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd hadoop-1.0.4
</span><span class='line'>
</span><span class='line'>#肯定会遇到诸多问题
</span><span class='line'>ant eclipse </span></code></pre></td></tr></table></div></figure>


<blockquote><p>问题1：configure: error: C++ preprocessor &#8220;/lib/cpp&#8221; fails sanity check</p>

<blockquote><p>mac没有安装Xcode的command tool</p></blockquote>

<p>问题2：can&#8217;t exec &#8220;glibtoolize&#8221;</p>

<blockquote><p>brew install autoconf automake libtool</p></blockquote>

<p>问题3: .eclipse.templates does not exist</p>

<blockquote><p>自己在hadoop-1.0.4下创建一个mkdir .eclipse.templates</p></blockquote></blockquote>

<!-- more -->


<h3>编译hadoop-eclipse-plugin</h3>

<br />


<p>1.进入eclipse插件目录</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd src/contrib/eclipse-plugin</span></code></pre></td></tr></table></div></figure>


<p>2.编辑build.properties</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vim build.properties
</span><span class='line'># 设置属性，eclipse.home根据自己的定义
</span><span class='line'>eclipse.home = /Applications/eclipse
</span><span class='line'>version = 1.0.4</span></code></pre></td></tr></table></div></figure>


<p>3.编辑build.xml</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 在target=jar里面增加下面的jar包
</span><span class='line'>&lt;copy file="${hadoop.root}/lib/commons-lang-2.4.jar"  todir="${build.dir}/lib" verbose="true"/&gt;
</span><span class='line'>&lt;copy file="${hadoop.root}/lib/commons-configuration-1.6.jar"  todir="${build.dir}/lib" verbose="true"/&gt;
</span><span class='line'>&lt;copy file="${hadoop.root}/lib/jackson-core-asl-1.8.8.jar"  todir="${build.dir}/lib" verbose="true"/&gt;
</span><span class='line'>&lt;copy file="${hadoop.root}/lib/jackson-mapper-asl-1.8.8.jar"  todir="${build.dir}/lib" verbose="true"/&gt;
</span><span class='line'>&lt;copy file="${hadoop.root}/lib/commons-httpclient-3.0.1.jar"  todir="${build.dir}/lib" verbose="true"/&gt;</span></code></pre></td></tr></table></div></figure>


<p>4.编辑vim META-INF/MANIFEST.MF</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 修改Bundle-ClassPath
</span><span class='line'>Bundle-ClassPath: classes/,
</span><span class='line'>  lib/hadoop-core.jar,
</span><span class='line'>  lib/commons-configuration-1.6.jar,
</span><span class='line'>  lib/commons-httpclient-3.0.1.jar,
</span><span class='line'>  lib/commons-lang-2.4.jar,
</span><span class='line'>  lib/jackson-core-asl-1.8.8.jar,
</span><span class='line'>  lib/jackson-mapper-asl-1.8.8.jar
</span></code></pre></td></tr></table></div></figure>


<p>5.复制hadoop核心包, 并生成我们需要的插件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp {root}/hadoop-core-1.0.4.jar {root}/build
</span><span class='line'>#生成jar包
</span><span class='line'>ant jar</span></code></pre></td></tr></table></div></figure>


<p>6.编译成功后在build/contrib/eclipse-plugin下找到hadoop-eclipse-plugin-1.0.4.jar</p>

<h3>eclipse配置</h3>

<ul>
<li><p>复制hadoop-eclipse-plugin-1.0.4.jar到eclipse的plugins下，然后重启eclipse</p></li>
<li><p>Preferences => Hadoop Map/Reduce</p></li>
</ul>


<p><img src="http://www.wanghd.com/images/post/hadoop-eclipse-location.png" title="hadoop-eclipse-location.png" alt="hadoop-eclipse-location.png" /></p>

<ul>
<li>Window => Show View => Other&#8230; => Map/Reduce Locations => New Hadoop Location&#8230;</li>
</ul>


<p><img src="http://www.wanghd.com/images/post/hadoop-eclipse-general.png" title="hadoop-eclipse-general.png" alt="hadoop-eclipse-general.png" /></p>

<ul>
<li>看下结果吧</li>
</ul>


<p><img src="http://www.wanghd.com/images/post/hadoop-eclipse-result.png" title="hadoop-eclipse-result.png" alt="hadoop-eclipse-result.png" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装配置hadoop]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/02/an-zhuang-pei-zhi-hadoop/"/>
    <updated>2012-11-02T23:38:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/02/an-zhuang-pei-zhi-hadoop</id>
    <content type="html"><![CDATA[<h3>下载stable的hadoop</h3>

<ul>
<li>hadoop的版本比较多，建议下载<code>stable</code>的，现在是<code>hadoop-1.0.4</code></li>
<li>提供一个<a href="http://hadoop.apache.org/releases.html#Download">下载链接</a></li>
</ul>


<h3>解压缩</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tar -zxvf hadoop-1.0.4.tar.gz
</span><span class='line'>cd hadoop-1.0.4</span></code></pre></td></tr></table></div></figure>


<h3>配置hadoop</h3>

<blockquote><p>vim编辑conf/hadoop-env.sh，设置环境变量</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#如果是mac的话，请添加下面这句
</span><span class='line'>export HADOOP_OPTS="-Djava.security.krb5.realm=OX.AC.UK 
</span><span class='line'>    -Djava.security.krb5.kdc=kdc0.ox.ac.uk:kdc1.ox.ac.uk"
</span><span class='line'>#配置JDK，mac的关系所以路径比较飘逸
</span><span class='line'>export JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<blockquote><p>vim编译conf/core-site.xml，设置hdfs端口</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;configuration&gt;
</span><span class='line'>    &lt;property&gt;
</span><span class='line'>        &lt;name&gt;fs.default.name&lt;/name&gt;
</span><span class='line'>        &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;
</span><span class='line'>    &lt;/property&gt;
</span><span class='line'>&lt;/configuration&gt;</span></code></pre></td></tr></table></div></figure>


<blockquote><p>vim编辑conf/hdfs-site.xml，设置hdfs复制份数</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;configuration&gt;
</span><span class='line'>    &lt;property&gt;
</span><span class='line'>        &lt;name&gt;dfs.replication&lt;/name&gt;  
</span><span class='line'>        &lt;value&gt;1&lt;/value&gt;  
</span><span class='line'>    &lt;/property&gt; 
</span><span class='line'>&lt;/configuration&gt;</span></code></pre></td></tr></table></div></figure>


<blockquote><p>vim编译conf/mapred-site.xml，设置job跟踪器的端口(map-reduce的)</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;configuration&gt;
</span><span class='line'>    &lt;property&gt;
</span><span class='line'>        &lt;name&gt;mapred.job.tracker&lt;/name&gt;
</span><span class='line'>        &lt;value&gt;localhost:9001&lt;/value&gt;
</span><span class='line'>    &lt;/property&gt;
</span><span class='line'>&lt;/configuration&gt;</span></code></pre></td></tr></table></div></figure>


<h3>配置ssh</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat ~/.ssh/id_dsa.pub &gt;&gt; authorized_keys</span></code></pre></td></tr></table></div></figure>


<p><img src="http://www.wanghd.com/images/post/ssh.jpg" title="ssh" alt="ssh" /></p>

<h3>启动测试hodoop</h3>

<ul>
<li>如果端口没有被占用的应该一切OK了</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/hadoop namenode -format
</span><span class='line'>bin/start-all.sh
</span><span class='line'>#增加一些文件，这里用你自己的目录替换
</span><span class='line'>bin/hadoop fs -put ~/project/mogilefs-tool /mogilefs-tool</span></code></pre></td></tr></table></div></figure>


<ul>
<li>在游览器里查看下结果，输入localhost:50070</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MogileFS详解]]></title>
    <link href="http://www.wanghd.com/blog/2012/10/23/mogilefsxiang-jie/"/>
    <updated>2012-10-23T22:48:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/10/23/mogilefsxiang-jie</id>
    <content type="html"><![CDATA[<ul>
<li>经过一个月的实际应用，我想是时候应该总结一下mogilefs的使用了，如果想和作者交流参考<a href="http://www.wanghd.com/blog/2012/10/13/irc-irssishi-yong-jiao-cheng/">IRC教程</a></li>
</ul>


<h3>MogileFS简介</h3>

<blockquote><p>MogileFS是一个<code>开源</code>的<code>分布式文件系统</code>，配合cdn和squid，性能非常好(<code>15亿</code>文件没问题，其他数据不方便透露)</p>

<p>他由下面几个部分组成:</p></blockquote>

<p><img src="http://www.wanghd.com/images/post/mogilefs-summary.jpg" title="mogilefs-summary" alt="mogilefs-summary" /></p>

<ol>
<li>memcache：用来缓存查询结果，降低db压力</li>
<li>mogilefsd：就是tracker，用来接收请求并交给子进程(job)处理</li>
<li>mogstored：监控磁盘状态和文件的实际存储</li>
<li>client：支持perl，java，ruby，php，python</li>
<li>mysql：存储记录</li>
<li>util：日常维护管理的工具集</li>
<li>telnet：监控tracker，实时调整job的工具</li>
</ol>


<!-- more -->


<h3>Mogstored</h3>

<blockquote><p>监控磁盘状态和文件的实际存储,启动mogstored会发现包含2个端口，默认的7501和7500</p>

<blockquote><p>7501用来监控磁盘状态</p>

<p>7500用来处理实际的文件存储</p></blockquote></blockquote>

<p><img src="http://www.wanghd.com/images/post/mogilefs-mogstored.jpg" title="mogilefs-mogstored" alt="mogilefs-mogstored" /></p>

<h4>问题总结</h4>

<ul>
<li>原本我一直以为mogstored自己实现了一套文件存储，但实际上不是。它使用的是WebDav，所以可以使用nginx代替默认的perlbal，实际用下来nginx更稳定</li>
<li>WebDav：一种基于 HTTP 1.1协议的通信协议.它扩展了HTTP 1.1，在GET、POST、HEAD等几个HTTP标准方法以外添加了一些新的方法，例如PUT(新增)、DELETE(删除)、MKCOL(创建目录)</li>
<li>在mogstored的使用上，犯过一个错误：直接使用root启动mogstored，那么创建的文件夹和文件都是属于root，导致delete job无法删除该文件（同事陈磊发现）</li>
<li>文件存储规则：/dev-xx/0/123/456/789/0123456789.fid，fid不足十位补0，通过fid进行切割变为目录，即分散又效率</li>
</ul>


<h3>Mogilefsd</h3>

<blockquote><p>主进程负责接受请求，分配任务给子进程执行,下面详细介绍一下他的子进程</p></blockquote>

<ol>
<li>query：处理主进程分配的请求，包括util和tool的指令</li>
<li>delete：根据删除队列对文件进行删除操作</li>
<li>replicate：复制文件直到满足mindevcount(文件复制几份)</li>
<li>fsck：检查磁盘文件和数据库是否匹配，不匹配时进行补救</li>
<li>monitor：监控子进程的状态，实时调整子进程个数</li>
<li>reaper：监控dead的磁盘，及时补救，把文件加到replicate queue</li>
<li>jobmaster：读取delete,replicate,rebalance,fsck队列，告诉主进程，主进程再交给对应的子进程处理</li>
</ol>


<h4>问题总结</h4>

<ul>
<li>query新建文件时，用剩余容量作权重，随机选择。所以新加入一块设备时，极有可能将成为热点设备，最好是一组设备一起加</li>
<li>如果设备出现问题，直接格式化后直接使用会导致数据库记录还在，文件丢失，最终fsck和replicate队列堆积，正确的做法是把设备状态设置为dead，然后格式化用一个新的devid使用</li>
<li>如果确定磁盘损坏，就一定要设置dead状态，reaper会自动补救</li>
</ul>


<h3>Memcache</h3>

<blockquote><p>用来缓存查询结果，降低db压力，query内部存放<code>key对应的fid</code>和<code>fid对应的设备</code></p></blockquote>

<h4>问题总结</h4>

<ul>
<li>db压力下不来的原因是客户端取得文件时没有设置noverify参数，如果确定要使用memcache就一定要设置noverify，否则不使用memcache</li>
</ul>


<h3>Mysql</h3>

<blockquote><p>用来存储记录，当然也可以使用其他数据库</p></blockquote>

<ol>
<li>host表：存储主机信息</li>
<li>device表：存储设备，一般单个device对应一块磁盘，也可以不这样</li>
<li>domain表：定义域，单个域下key唯一</li>
<li>class表：文件存放策略，包括份数，复制策略，校验和</li>
<li>server_settings表：部分配置信息和job配置信息</li>
<li>file表：文件信息</li>
<li>file_on表：文件存放在哪些存储设备</li>
<li>file_to_delete2表：删除队列表，升级后以前的不用了</li>
<li>file_to_queue表：type=1是fsck队列，type=2是rebalance队列</li>
<li>fsck_log表：fsck日志表，TYPE很多很诡异，参考<a href="http://www.wanghd.com/blog/2012/09/29/mogilefsde-fscktan-jiu/">fsk探究</a></li>
<li>file_to_replicate表：复制队列</li>
</ol>


<h4>问题总结</h4>

<ul>
<li>怀疑file_on表会有慢查询，其实不会太慢，因为Innodb默认asc排序</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#file_on的索引情况
</span><span class='line'>PRIMARY KEY (`fid`,`devid`),KEY `devid` (`devid`)
</span><span class='line'>#下面的语句是不会慢的
</span><span class='line'>select * from file_on where devid = ? and fid &gt; ? order by fid asc limit 100</span></code></pre></td></tr></table></div></figure>


<ul>
<li>怀疑多个replicate队列同时操作同一个fid时是否会出现bug，其实不会，因为replicate使用mysql的get_lock(fid),release_lock(fid)</li>
</ul>


<h3>Utilities</h3>

<ol>
<li>mogadm：该工具直接管理mogilefs的主机、设备、域、类、从数据库、配置、fsck、rebalance</li>
<li>mogstat：观察fsck,rebalance,replication,delete运行状况</li>
<li>mogfiledebug：查看文件存储信息，也可以查file_on表</li>
<li>mogfetch：导出指定的文件</li>
<li>mogdelete：删除指定的文件</li>
<li>mogrename：更改文件的key</li>
<li>mogupload：插入一个文件</li>
<li>moglistfids，moglistkeys：批量列出记录，自己写脚本时可以使用</li>
</ol>


<h3>Telnet</h3>

<ol>
<li>!version：显示mogilefs版本</li>
<li>!recent：显示当前query执行时间（可做监控）</li>
<li>!queue：显示等待执行的查询（可做监控）</li>
<li>!stats：从tracker启动开始就记录的一些累加信息和实时信息，比如处理请求的总数、job队列当前记录数、当前等待执行的请求的个数等</li>
<li>!watch：显示<code>警告</code>和<code>错误</code>信息（可做监控）</li>
<li>!jobs：显示当前各个job的个数</li>
<li>!want：<code>动态调整</code>job个数</li>
<li>!to：不常用，向子进程发送消息，用来调试的</li>
<li>!shutdown：关闭所有mogilefsd进程</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MogileFS的replicate进程分析]]></title>
    <link href="http://www.wanghd.com/blog/2012/10/16/mogilefsde-replicatefen-xi/"/>
    <updated>2012-10-16T15:47:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/10/16/mogilefsde-replicatefen-xi</id>
    <content type="html"><![CDATA[<h4>基本流程</h4>

<ol>
<li>从replicate queue里获取需要处理数据,进行循环</li>
<li>执行真正的【replicate操作】，操作时会锁住这个fid，然后返回结果【下面会对该操作具体分析】</li>
<li>返回没问题，删除队列并释放锁</li>
<li>返回failed_getting_lock说明正在处理了</li>
<li>返回no_source说明file_on表上没有关于该文件的记录，nexttry设置为最大并释放锁</li>
<li>返回too_happy说明devcount > mindevcount，会尝试删除多余的并释放锁（前提是文件存在，所以不会修复file_on有，文件丢失的情况）</li>
<li>如果以上都不满足，nexttry根据规则增加，failcount递增并释放锁</li>
</ol>


<h4>replicate操作分析</h4>

<ul>
<li>简单说replicate操作就是取得合适的device进行复制，合适的意思是尽量避免同一个host的device，没办法才用同一个host的device，有错误就返回具体信息</li>
<li>replicate操作才是真正的复制，代码比较多，但是不难理解（难点都会有注释）</li>
</ul>


<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">sub </span><span class="nf">replicate</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="p">(</span><span class="nv">$fid</span><span class="p">,</span> <span class="nv">%opts</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>      <span class="c1">#参数赋值</span>
</span><span class='line'>    <span class="nv">$fid</span> <span class="o">=</span> <span class="nn">MogileFS::</span><span class="n">FID</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="nv">$fid</span><span class="p">)</span> <span class="k">unless</span> <span class="nb">ref</span> <span class="nv">$fid</span><span class="p">;</span>   <span class="c1">#实例fid对象</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$fidid</span> <span class="o">=</span> <span class="nv">$fid</span><span class="o">-&gt;</span><span class="n">id</span><span class="p">;</span> <span class="c1">#fid的id</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">debug</span><span class="p">(</span><span class="s">&quot;Replication for $fidid called, opts=&quot;</span><span class="o">.</span><span class="nb">join</span><span class="p">(</span><span class="s">&#39;,&#39;</span><span class="p">,</span><span class="nb">keys</span><span class="p">(</span><span class="nv">%opts</span><span class="p">)))</span> <span class="k">if</span> <span class="nv">$</span><span class="nn">Mgd::</span><span class="nv">DEBUG</span> <span class="o">&gt;=</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$errref</span>    <span class="o">=</span> <span class="nb">delete</span> <span class="nv">$opts</span><span class="p">{</span><span class="s">&#39;errref&#39;</span><span class="p">};</span>  <span class="c1">#错误消息的引用</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$no_unlock</span> <span class="o">=</span> <span class="nb">delete</span> <span class="nv">$opts</span><span class="p">{</span><span class="s">&#39;no_unlock&#39;</span><span class="p">};</span>  <span class="c1">#上锁,使用Mysql的锁,get_lock和release_lock</span>
</span><span class='line'>    <span class="c1">#复制源，复制到哪些设备，排除的设备，避免的设备</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$fixed_source</span> <span class="o">=</span> <span class="nb">delete</span> <span class="nv">$opts</span><span class="p">{</span><span class="s">&#39;source_devid&#39;</span><span class="p">};</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$mask_devids</span>  <span class="o">=</span> <span class="nb">delete</span> <span class="nv">$opts</span><span class="p">{</span><span class="s">&#39;mask_devids&#39;</span><span class="p">}</span>  <span class="o">||</span> <span class="p">{};</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$avoid_devids</span> <span class="o">=</span> <span class="nb">delete</span> <span class="nv">$opts</span><span class="p">{</span><span class="s">&#39;avoid_devids&#39;</span><span class="p">}</span> <span class="o">||</span> <span class="p">{};</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$target_devids</span> <span class="o">=</span> <span class="nb">delete</span> <span class="nv">$opts</span><span class="p">{</span><span class="s">&#39;target_devids&#39;</span><span class="p">}</span> <span class="o">||</span> <span class="o">[]</span><span class="p">;</span> <span class="c1"># inverse of avoid_devids.</span>
</span><span class='line'>    <span class="nb">die</span> <span class="s">&quot;unknown_opts&quot;</span> <span class="k">if</span> <span class="nv">%opts</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">die</span> <span class="k">unless</span> <span class="nb">ref</span> <span class="nv">$mask_devids</span> <span class="ow">eq</span> <span class="s">&quot;HASH&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$sdevid</span><span class="p">;</span> <span class="c1">#下面会看到，就是复制源</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$sto</span> <span class="o">=</span> <span class="nn">Mgd::</span><span class="n">get_store</span><span class="p">();</span>
</span><span class='line'>    <span class="c1">#释放锁的函数release_lock(name)</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$unlock</span> <span class="o">=</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>        <span class="nv">$sto</span><span class="o">-&gt;</span><span class="n">note_done_replicating</span><span class="p">(</span><span class="nv">$fidid</span><span class="p">);</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">#这是一个返回函数，返回结果用的</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$retunlock</span> <span class="o">=</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$rv</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>        <span class="k">my</span> <span class="p">(</span><span class="nv">$errmsg</span><span class="p">,</span> <span class="nv">$errcode</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">@_</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="p">(</span><span class="nv">$errcode</span><span class="p">,</span> <span class="nv">$errmsg</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>            <span class="nv">$errmsg</span> <span class="o">=</span> <span class="s">&quot;$errcode: $errmsg&quot;</span><span class="p">;</span> <span class="c1"># include code with message</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="p">(</span><span class="nv">$errmsg</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="nv">$$errref</span> <span class="o">=</span> <span class="nv">$errcode</span> <span class="k">if</span> <span class="nv">$errref</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$ret</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$errcode</span> <span class="o">&amp;&amp;</span> <span class="nv">$errcode</span> <span class="ow">eq</span> <span class="s">&quot;failed_getting_lock&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1"># don&#39;t emit a warning with error() on lock failure.  not</span>
</span><span class='line'>            <span class="c1"># a big deal, don&#39;t scare people.</span>
</span><span class='line'>            <span class="nv">$ret</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="nv">$ret</span> <span class="o">=</span> <span class="nv">$rv</span> <span class="p">?</span> <span class="nv">$rv</span> <span class="p">:</span> <span class="n">error</span><span class="p">(</span><span class="nv">$errmsg</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$no_unlock</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nb">die</span> <span class="s">&quot;ERROR: must be called in list context w/ no_unlock&quot;</span> <span class="k">unless</span> <span class="nb">wantarray</span><span class="p">;</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">(</span><span class="nv">$ret</span><span class="p">,</span> <span class="nv">$unlock</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="nb">die</span> <span class="s">&quot;ERROR: must not be called in list context w/o no_unlock&quot;</span> <span class="k">if</span> <span class="nb">wantarray</span><span class="p">;</span>
</span><span class='line'>            <span class="nv">$unlock</span><span class="o">-&gt;</span><span class="p">();</span>
</span><span class='line'>            <span class="k">return</span> <span class="nv">$ret</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># hashref of devid -&gt; MogileFS::Device所有的device</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$devs</span> <span class="o">=</span> <span class="nn">Mgd::</span><span class="n">device_factory</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">map_by_id</span>
</span><span class='line'>        <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;No device map&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">#错误话就调用retunlock </span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$retunlock</span><span class="o">-&gt;</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s">&quot;failed_getting_lock&quot;</span><span class="p">,</span> <span class="s">&quot;Unable to obtain lock for fid $fidid&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">unless</span> <span class="nv">$sto</span><span class="o">-&gt;</span><span class="n">should_begin_replicating_fidid</span><span class="p">(</span><span class="nv">$fidid</span><span class="p">);</span><span class="c1">#这里获取mysql的锁 get_lock(name,timeout),name里fidid</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># if the fid doesn&#39;t even exist, consider our job done!  no point</span>
</span><span class='line'>    <span class="c1"># replicating file contents of a file no longer in the namespace.</span>
</span><span class='line'>    <span class="c1">#没有fid返回</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$retunlock</span><span class="o">-&gt;</span><span class="p">(</span><span class="s">&quot;nofid&quot;</span><span class="p">)</span> <span class="k">unless</span> <span class="nv">$fid</span><span class="o">-&gt;</span><span class="nb">exists</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">#Class.pm对象</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$cls</span> <span class="o">=</span> <span class="nv">$fid</span><span class="o">-&gt;</span><span class="n">class</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">#策略对象MogileFS::ReplicationPolicy::MultipleHosts</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$polobj</span> <span class="o">=</span> <span class="nv">$cls</span><span class="o">-&gt;</span><span class="n">repl_policy_obj</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># learn what this devices file is already on</span>
</span><span class='line'>    <span class="c1">#所有设备</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">@on_devs</span><span class="p">;</span>         <span class="c1"># all devices fid is on, reachable or not.</span>
</span><span class='line'>    <span class="c1">#排除dead和drain的设备</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">@on_devs_tellpol</span><span class="p">;</span> <span class="c1"># subset of @on_devs, to tell the policy class about</span>
</span><span class='line'>    <span class="c1">#可读的设备</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">@on_up_devid</span><span class="p">;</span>     <span class="c1"># subset of @on_devs:  just devs that are readable</span>
</span><span class='line'>    <span class="c1">#设置上面的数组</span>
</span><span class='line'>    <span class="k">foreach</span> <span class="k">my</span> <span class="nv">$devid</span> <span class="p">(</span><span class="nv">$fid</span><span class="o">-&gt;</span><span class="n">devids</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$d</span> <span class="o">=</span> <span class="nn">Mgd::</span><span class="n">device_factory</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">get_by_id</span><span class="p">(</span><span class="nv">$devid</span><span class="p">)</span>
</span><span class='line'>            <span class="ow">or</span> <span class="k">next</span><span class="p">;</span>
</span><span class='line'>        <span class="c1">#fid在哪些dev上</span>
</span><span class='line'>        <span class="nb">push</span> <span class="nv">@on_devs</span><span class="p">,</span> <span class="nv">$d</span><span class="p">;</span>
</span><span class='line'>        <span class="c1">#should_hava_files表示状态不为drain或者dead</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$d</span><span class="o">-&gt;</span><span class="n">dstate</span><span class="o">-&gt;</span><span class="n">should_have_files</span> <span class="o">&amp;&amp;</span> <span class="o">!</span> <span class="nv">$mask_devids</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$devid</span><span class="p">})</span> <span class="p">{</span>
</span><span class='line'>            <span class="nb">push</span> <span class="nv">@on_devs_tellpol</span><span class="p">,</span> <span class="nv">$d</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="c1">#有read权限</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$d</span><span class="o">-&gt;</span><span class="n">dstate</span><span class="o">-&gt;</span><span class="n">can_read_from</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nb">push</span> <span class="nv">@on_up_devid</span><span class="p">,</span> <span class="nv">$devid</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">#如果一个设备都没，就返回</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$retunlock</span><span class="o">-&gt;</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s">&quot;no_source&quot;</span><span class="p">,</span>   <span class="s">&quot;Source is no longer available replicating $fidid&quot;</span><span class="p">)</span> <span class="k">if</span> <span class="nv">@on_devs</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$retunlock</span><span class="o">-&gt;</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s">&quot;source_down&quot;</span><span class="p">,</span> <span class="s">&quot;No alive devices available replicating $fidid&quot;</span><span class="p">)</span> <span class="k">if</span> <span class="nv">@on_up_devid</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">#fixed_source设置错误，根本就没有</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$fixed_source</span> <span class="o">&amp;&amp;</span> <span class="o">!</span> <span class="nb">grep</span> <span class="p">{</span> <span class="nv">$_</span> <span class="o">==</span> <span class="nv">$fixed_source</span> <span class="p">}</span> <span class="nv">@on_up_devid</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">error</span><span class="p">(</span><span class="s">&quot;Fixed source dev$fixed_source requested for $fidid but not available. Trying other devices&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">#错误的设备记录，下面循环里就不会再使用了</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">%dest_failed</span><span class="p">;</span>    <span class="c1"># devid -&gt; 1 for each devid we were asked to copy to, but failed.</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">%source_failed</span><span class="p">;</span>  <span class="c1"># devid -&gt; 1 for each devid we had problems reading from.</span>
</span><span class='line'>    <span class="c1">#用来标记真的复制了，下面的循环会使用</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$got_copy_request</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>  <span class="c1"># true once replication policy asks us to move something somewhere</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$copy_err</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">#过滤复制到哪些设备</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$dest_devs</span> <span class="o">=</span> <span class="nv">$devs</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">@$target_devids</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$dest_devs</span> <span class="o">=</span> <span class="p">{</span><span class="nb">map</span> <span class="p">{</span> <span class="nv">$_</span> <span class="o">=&gt;</span> <span class="nv">$devs</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$_</span><span class="p">}</span> <span class="p">}</span> <span class="nv">@$target_devids</span><span class="p">};</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$rr</span><span class="p">;</span>  <span class="c1">#MogileFS::ReplicationRequest对象</span>
</span><span class='line'>    <span class="c1">#开始循环复制，因为会有可能要复制3份的嘛。</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">#MogileFS::ReplicationPolicy::MultipleHosts的replicate_to</span>
</span><span class='line'>        <span class="c1">#取得ReplicationRequest对象【该对象是通过ReplicationPolicy::MultipleHosts策略生成的】</span>
</span><span class='line'>        <span class="c1">#该对象会有4种返回值，分别是，1：对象形式，说明需要并可以复制。2：tmp_no_answer，没有可选择的device。</span>
</span><span class='line'>        <span class="c1">#3：all_good，一切OK。4：too_good，好过头了呀。</span>
</span><span class='line'>        <span class="nv">$rr</span> <span class="o">=</span> <span class="n">rr_upgrade</span><span class="p">(</span><span class="nv">$polobj</span><span class="o">-&gt;</span><span class="n">replicate_to</span><span class="p">(</span>
</span><span class='line'>                                               <span class="n">fid</span>       <span class="o">=&gt;</span> <span class="nv">$fidid</span><span class="p">,</span> <span class="c1">#fidid</span>
</span><span class='line'>                                               <span class="n">on_devs</span>   <span class="o">=&gt;</span> <span class="o">\</span><span class="nv">@on_devs_tellpol</span><span class="p">,</span> <span class="c1"># all device objects fid is on, dead or otherwise</span>
</span><span class='line'>                                               <span class="n">all_devs</span>  <span class="o">=&gt;</span> <span class="nv">$dest_devs</span><span class="p">,</span> <span class="c1">#所有的dev，如果有target_devids的话那就用target的咯</span>
</span><span class='line'>                                               <span class="n">failed</span>    <span class="o">=&gt;</span> <span class="o">\</span><span class="nv">%dest_failed</span><span class="p">,</span> <span class="c1">#失败信息</span>
</span><span class='line'>                                               <span class="n">min</span>       <span class="o">=&gt;</span> <span class="nv">$cls</span><span class="o">-&gt;</span><span class="n">mindevcount</span><span class="p">,</span> <span class="c1">#最小设备</span>
</span><span class='line'>                                               <span class="p">));</span>
</span><span class='line'>        <span class="c1">#是happy就跳出，跳出会有后续处理的</span>
</span><span class='line'>        <span class="k">last</span> <span class="k">if</span> <span class="nv">$rr</span><span class="o">-&gt;</span><span class="n">is_happy</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">#经过过滤的dev</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">@ddevs</span><span class="p">;</span>  <span class="c1"># dest devs, in order of preference</span>
</span><span class='line'>        <span class="c1">#选择出来的devid</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$ddevid</span><span class="p">;</span> <span class="c1"># dest devid we&#39;ve chosen to copy to</span>
</span><span class='line'>        <span class="c1">#这里设置ddevs,其实就是host不同的设备</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">@ddevs</span> <span class="o">=</span> <span class="nv">$rr</span><span class="o">-&gt;</span><span class="n">copy_to_one_of_ideally</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">#过滤掉不希望的</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="k">my</span> <span class="nv">@not_masked_ids</span> <span class="o">=</span> <span class="p">(</span><span class="nb">grep</span> <span class="p">{</span> <span class="o">!</span> <span class="nv">$mask_devids</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$_</span><span class="p">}</span> <span class="o">&amp;&amp;</span>
</span><span class='line'>                                             <span class="o">!</span> <span class="nv">$avoid_devids</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$_</span><span class="p">}</span>
</span><span class='line'>                                         <span class="p">}</span>
</span><span class='line'>                                      <span class="nb">map</span> <span class="p">{</span> <span class="nv">$_</span><span class="o">-&gt;</span><span class="n">id</span> <span class="p">}</span> <span class="nv">@ddevs</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                <span class="nv">$ddevid</span> <span class="o">=</span> <span class="nv">$not_masked_ids</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span> <span class="c1">#拿一个放到ddevid</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="nv">$retunlock</span><span class="o">-&gt;</span><span class="p">(</span><span class="s">&quot;would_worsen&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">elsif</span> <span class="p">(</span><span class="nv">@ddevs</span> <span class="o">=</span> <span class="nv">$rr</span><span class="o">-&gt;</span><span class="n">copy_to_one_of_desperate</span><span class="p">)</span> <span class="p">{</span> <span class="c1">#没有不同的host，没办法同一个host也行啊</span>
</span><span class='line'>            <span class="c1"># TODO: reschedule a replication for &#39;n&#39; minutes in future, or</span>
</span><span class='line'>            <span class="c1"># when new hosts/devices become available or change state</span>
</span><span class='line'>            <span class="nv">$ddevid</span> <span class="o">=</span> <span class="nv">$ddevs</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">id</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">#跳出了呀，</span>
</span><span class='line'>            <span class="k">last</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="c1">#标记一下真的复制了</span>
</span><span class='line'>        <span class="nv">$got_copy_request</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1"># replication policy shouldn&#39;t tell us to put a file on a device</span>
</span><span class='line'>        <span class="c1"># we&#39;ve already told it that we&#39;ve failed at.  so if we get that response,</span>
</span><span class='line'>        <span class="c1"># the policy plugin is broken and we should terminate now.</span>
</span><span class='line'>        <span class="c1">#不在错误数组里</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$dest_failed</span><span class="p">{</span><span class="nv">$ddevid</span><span class="p">})</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="nv">$retunlock</span><span class="o">-&gt;</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s">&quot;policy_error_doing_failed&quot;</span><span class="p">,</span>
</span><span class='line'>                                <span class="s">&quot;replication policy told us to do something we already told it we failed at while replicating fid $fidid&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1"># replication policy shouldn&#39;t tell us to put a file on a</span>
</span><span class='line'>        <span class="c1"># device that it&#39;s already on.  that&#39;s just stupid.</span>
</span><span class='line'>        <span class="c1">#已经在这file_on上了么，不行的呀</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nb">grep</span> <span class="p">{</span> <span class="nv">$_</span><span class="o">-&gt;</span><span class="n">id</span> <span class="o">==</span> <span class="nv">$ddevid</span> <span class="p">}</span> <span class="nv">@on_devs</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="nv">$retunlock</span><span class="o">-&gt;</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s">&quot;policy_error_already_there&quot;</span><span class="p">,</span>
</span><span class='line'>                                <span class="s">&quot;replication policy told us to put fid $fidid on dev $ddevid, but it&#39;s already there!&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1"># find where we&#39;re replicating from</span>
</span><span class='line'>        <span class="c1">#这里开始设置复制源</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1"># TODO: use an observed good device+host as source to start.</span>
</span><span class='line'>            <span class="c1">#排除掉错误源</span>
</span><span class='line'>            <span class="k">my</span> <span class="nv">@choices</span> <span class="o">=</span> <span class="nb">grep</span> <span class="p">{</span> <span class="o">!</span> <span class="nv">$source_failed</span><span class="p">{</span><span class="nv">$_</span><span class="p">}</span> <span class="p">}</span> <span class="nv">@on_up_devid</span><span class="p">;</span>
</span><span class='line'>            <span class="k">return</span> <span class="nv">$retunlock</span><span class="o">-&gt;</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s">&quot;source_down&quot;</span><span class="p">,</span> <span class="s">&quot;No devices available replicating $fidid&quot;</span><span class="p">)</span> <span class="k">unless</span> <span class="nv">@choices</span><span class="p">;</span>
</span><span class='line'>            <span class="c1">#如果有fixed_source那就用，没有么就随即选一个吧</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nv">$fixed_source</span> <span class="o">&amp;&amp;</span> <span class="nb">grep</span> <span class="p">{</span> <span class="nv">$_</span> <span class="o">==</span> <span class="nv">$fixed_source</span> <span class="p">}</span> <span class="nv">@choices</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nv">$sdevid</span> <span class="o">=</span> <span class="nv">$fixed_source</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="nv">@choices</span> <span class="o">=</span> <span class="nn">List::Util::</span><span class="n">shuffle</span><span class="p">(</span><span class="nv">@choices</span><span class="p">);</span>
</span><span class='line'>                <span class="nn">MogileFS::</span><span class="n">run_global_hook</span><span class="p">(</span><span class="s">&#39;replicate_order_final_choices&#39;</span><span class="p">,</span> <span class="nv">$devs</span><span class="p">,</span> <span class="o">\</span><span class="nv">@choices</span><span class="p">);</span>
</span><span class='line'>                <span class="nv">$sdevid</span> <span class="o">=</span> <span class="nb">shift</span> <span class="nv">@choices</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">#是子进程的判断</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$worker</span> <span class="o">=</span> <span class="nn">MogileFS::</span><span class="n">ProcManager</span><span class="o">-&gt;</span><span class="n">is_child</span> <span class="ow">or</span> <span class="nb">die</span><span class="p">;</span>
</span><span class='line'>        <span class="c1">#校验和，不用的呀，不考虑</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$digest</span> <span class="o">=</span> <span class="n">Digest</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="nv">$cls</span><span class="o">-&gt;</span><span class="n">hashname</span><span class="p">)</span> <span class="k">if</span> <span class="nv">$cls</span><span class="o">-&gt;</span><span class="n">hashtype</span><span class="p">;</span>
</span><span class='line'>        <span class="c1">#真的复制了</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$rv</span> <span class="o">=</span> <span class="n">http_copy</span><span class="p">(</span>
</span><span class='line'>                           <span class="n">sdevid</span>       <span class="o">=&gt;</span> <span class="nv">$sdevid</span><span class="p">,</span>
</span><span class='line'>                           <span class="n">ddevid</span>       <span class="o">=&gt;</span> <span class="nv">$ddevid</span><span class="p">,</span>
</span><span class='line'>                           <span class="n">fid</span>          <span class="o">=&gt;</span> <span class="nv">$fidid</span><span class="p">,</span>
</span><span class='line'>                           <span class="n">rfid</span>         <span class="o">=&gt;</span> <span class="nv">$fid</span><span class="p">,</span>
</span><span class='line'>                           <span class="n">expected_len</span> <span class="o">=&gt;</span> <span class="nb">undef</span><span class="p">,</span>  <span class="c1"># FIXME: get this info to pass along</span>
</span><span class='line'>                           <span class="n">errref</span>       <span class="o">=&gt;</span> <span class="o">\</span><span class="nv">$copy_err</span><span class="p">,</span>
</span><span class='line'>                           <span class="n">callback</span>     <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span> <span class="nv">$worker</span><span class="o">-&gt;</span><span class="n">still_alive</span><span class="p">;</span> <span class="p">},</span>
</span><span class='line'>                           <span class="n">digest</span>       <span class="o">=&gt;</span> <span class="nv">$digest</span><span class="p">,</span>
</span><span class='line'>                           <span class="p">);</span>
</span><span class='line'>        <span class="nb">die</span> <span class="s">&quot;Bogus error code: $copy_err&quot;</span> <span class="k">if</span> <span class="o">!</span><span class="nv">$rv</span> <span class="o">&amp;&amp;</span> <span class="nv">$copy_err</span> <span class="o">!~</span> <span class="sr">/^(?:src|dest)_error$/</span><span class="p">;</span>
</span><span class='line'>        <span class="c1">#如果错误了，设置失败数组，next等于其他语言的continue呀，继续找其他的</span>
</span><span class='line'>        <span class="k">unless</span> <span class="p">(</span><span class="nv">$rv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">error</span><span class="p">(</span><span class="s">&quot;Failed copying fid $fidid from devid $sdevid to devid $ddevid (error type: $copy_err)&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nv">$copy_err</span> <span class="ow">eq</span> <span class="s">&quot;src_error&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nv">$source_failed</span><span class="p">{</span><span class="nv">$sdevid</span><span class="p">}</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="nv">$fixed_source</span> <span class="o">&amp;&amp;</span> <span class="nv">$fixed_source</span> <span class="o">==</span> <span class="nv">$sdevid</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">error</span><span class="p">(</span><span class="s">&quot;Fixed source dev$fixed_source was requested for $fidid but failed: will try other sources&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="nv">$dest_failed</span><span class="p">{</span><span class="nv">$ddevid</span><span class="p">}</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">next</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="c1">#复制成功了，开始插入数据了</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$dfid</span> <span class="o">=</span> <span class="nn">MogileFS::</span><span class="n">DevFID</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="nv">$ddevid</span><span class="p">,</span> <span class="nv">$fid</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$dfid</span><span class="o">-&gt;</span><span class="n">add_to_db</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$digest</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nv">$fid</span><span class="o">-&gt;</span><span class="n">checksum</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nv">$sto</span><span class="o">-&gt;</span><span class="n">set_checksum</span><span class="p">(</span><span class="nv">$fidid</span><span class="p">,</span> <span class="nv">$cls</span><span class="o">-&gt;</span><span class="n">hashtype</span><span class="p">,</span> <span class="nv">$digest</span><span class="o">-&gt;</span><span class="n">digest</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">#设置一下变量，加入要复制3分是应该再继续复制的</span>
</span><span class='line'>        <span class="nb">push</span> <span class="nv">@on_devs</span><span class="p">,</span> <span class="nv">$devs</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$ddevid</span><span class="p">};</span>
</span><span class='line'>        <span class="nb">push</span> <span class="nv">@on_devs_tellpol</span><span class="p">,</span> <span class="nv">$devs</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$ddevid</span><span class="p">};</span>
</span><span class='line'>        <span class="nb">push</span> <span class="nv">@on_up_devid</span><span class="p">,</span> <span class="nv">$ddevid</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># We are over replicated. Let caller decide if it should rebalance.</span>
</span><span class='line'>    <span class="c1">#好过头了</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$rr</span><span class="o">-&gt;</span><span class="n">too_happy</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$retunlock</span><span class="o">-&gt;</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s">&quot;too_happy&quot;</span><span class="p">,</span> <span class="s">&quot;fid $fidid is on too many devices&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">#这是满足策略的情况</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$rr</span><span class="o">-&gt;</span><span class="n">is_happy</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$retunlock</span><span class="o">-&gt;</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">if</span> <span class="nv">$got_copy_request</span><span class="p">;</span>
</span><span class='line'>        <span class="c1">#没有地方去复制了</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$retunlock</span><span class="o">-&gt;</span><span class="p">(</span><span class="s">&quot;lost_race&quot;</span><span class="p">);</span>  <span class="c1"># some other process got to it first.  policy was happy immediately.</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">#应该不会走到这里了</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$retunlock</span><span class="o">-&gt;</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s">&quot;policy_no_suggestions&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="s">&quot;replication policy ran out of suggestions for us replicating fid $fidid&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
