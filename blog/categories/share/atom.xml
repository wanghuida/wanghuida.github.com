<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Share | 老虎的眼睛]]></title>
  <link href="http://www.wanghd.com/blog/categories/share/atom.xml" rel="self"/>
  <link href="http://www.wanghd.com/"/>
  <updated>2013-01-10T11:36:29+08:00</updated>
  <id>http://www.wanghd.com/</id>
  <author>
    <name><![CDATA[王惠达 huida wanghuida]]></name>
    <email><![CDATA[wanghuida258@yahoo.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RTXLDAP教程]]></title>
    <link href="http://www.wanghd.com/blog/2013/01/10/rtxldapjiao-cheng/"/>
    <updated>2013-01-10T10:14:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2013/01/10/rtxldapjiao-cheng</id>
    <content type="html"><![CDATA[<h3>名词解释</h3>

<ol>
<li>RTX: 腾讯出的企业沟通工具</li>
<li>LDAP: 关于人或者其他信息的集中存储，微软的AD就是LDAP的一种</li>
<li>RTXLDAP: 基于RTX的SDK开发出的第三方工具，可以同步LDAP用户，可以RTX与LDAP单点登陆。支持RTX最新版本</li>
</ol>


<!-- more -->


<h3>配置使用</h3>

<ul>
<li>获取源码</li>
</ul>


<p><code>
git clone git@github.com:wanghuida/RTXLDAP.git
</code></p>

<ul>
<li>建议使用vs 2008打开</li>
</ul>


<p><img src="/images/post/rtxldap1.jpg" title="rtxldap1" alt="rtxldap1" /></p>

<ul>
<li>修改App.config配置文件</li>
</ul>


<p>```</p>

<!-- 域 -->


<p><add key="DomainName" value="192.168.1.100/DC=home,DC=net" /></p>

<!-- 域用户,用来读取所有域用户信息 -->


<p><add key="DomainUser" value="wanghuida" /></p>

<!-- 域用户密码 -->


<p><add key="DomainPwd" value="123456" /></p>

<!-- RTX服务IP，建议在同一台,可以免去其他配置 -->


<p><add key="RTXIP" value="127.0.0.1"/></p>

<!-- RTX服务端口 -->


<p><add key="RTXPort"  value="8006"/></p>

<!-- 标识，随意修改，不重复即可 -->


<p><add key="AppGUID" value="{193947E5-E990-4af8-A954-D358B385F099}"/></p>

<!-- 标识，随意修改，不重复即可 -->


<p><add key="AppName" value="WanghuidaRtxLdap"/>
```</p>

<ul>
<li>F5启动调试</li>
</ul>


<p><img src="/images/post/rtxldap2.jpg" title="rtxldap2" alt="rtxldap2" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jquery在firefox下无法autocomplete]]></title>
    <link href="http://www.wanghd.com/blog/2013/01/04/jqueryzai-firefoxxia-wu-fa-autocomplete/"/>
    <updated>2013-01-04T17:29:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2013/01/04/jqueryzai-firefoxxia-wu-fa-autocomplete</id>
    <content type="html"><![CDATA[<h4>jquery的autocomplete中文输入在firefox无法正常使用</h4>

<ul>
<li>firefox下用input事件触发keydown即可</li>
</ul>


<p>```
$('元素').bind('input', function(){</p>

<pre><code>$(this).trigger('keydown');
</code></pre>

<p>}).bind("keydown", function(event){</p>

<pre><code>事件
</code></pre>

<p>}
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[inotify,rsync统一化配置]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/25/inotify/"/>
    <updated>2012-11-25T16:14:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/25/inotify</id>
    <content type="html"><![CDATA[<h3>为什么要统一化配置，手动改改不行？</h3>

<ul>
<li>假设有10台服务器，要改10次，错误和遗漏在所难免</li>
<li>需要有一个地方备份配置</li>
<li>也许还需要对配置文件进行版本控制</li>
</ul>


<h3>inotify+rsync改变这一切</h3>

<ul>
<li>inotify可以递归的监控文件是否有新建，修改等</li>
<li>rsync用来同步</li>
</ul>


<!-- more -->


<h3>安装inotify</h3>

<ul>
<li>内核版本要Linux 2.6.13以上</li>
</ul>


<p><code>bash
wget --no-check-certificate https://github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz
tar -zxvf inotify-tools-3.14.tar.gz
cd inotify-tools-3.14
./configure
make
make install
</code></p>

<h3>测试脚本监控修改并自动同步</h3>

<ul>
<li>--exclude是用来排除隐藏文件</li>
</ul>


<p>```bash</p>

<h1>!/bin/sh</h1>

<p>ip="192.168.30.1 192.168.30.2"
src="http://www.wanghd.com/tmp/test"
inotifywait --exclude '/.' -mrq -e close_write,delete,move $src | while read line
do</p>

<pre><code>sleep 1
echo $line
for i in $ip
do 
    rsync --exclude=".*" -av --delete-after "$src/" -e ssh "$i:$src/"
done
</code></pre>

<p>done
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[redis实战]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/22/redisshi-zhan/"/>
    <updated>2012-11-22T17:17:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/22/redisshi-zhan</id>
    <content type="html"><![CDATA[<h3>redis是什么？</h3>

<ul>
<li>redis是一个开源的，先进的key-value存储服务器端</li>
<li>value可以包含多种结构，比如strings, hashes, lists, sets ,sorted sets</li>
<li>官方网址：<a href="http://redis.io">http://redis.io</a></li>
<li><a href="/blog/2012/10/13/irc-irssishi-yong-jiao-cheng/">freenode</a>的聊天室名称是#redis</li>
</ul>


<!-- more -->


<h3>安装redis</h3>

<ul>
<li>mac下安装redis非常简单</li>
</ul>


<p><code>bash
$ brew install redis
</code></p>

<ul>
<li>linux下的安装步骤如下</li>
</ul>


<p>```bash</p>

<h1>下载，解压和编译</h1>

<p>$ wget http://redis.googlecode.com/files/redis-2.6.5.tar.gz
$ tar xzf redis-2.6.5.tar.gz
$ cd redis-2.6.5
$ make
```</p>

<h3>配置redis</h3>

<ul>
<li>redis的默认配置文件是redis.conf，里面有详细的注释</li>
<li>下面是简单的单台redis配置</li>
</ul>


<p>```</p>

<h1>base</h1>

<p>daemonize yes                       #守护进程
port 6379                           #监听端口
bind 127.0.0.1                      #绑定的ip地址
timeout 0                           #断开空闲的客户端时间
loglevel notice                     #记录到错误日志的等级
logfile /usr/local/log/redis.log    #记录的日志文件
databases 16                        #可以选择的db个数</p>

<h1>rdb默认开启的持久化模式</h1>

<p>save 900 1                          #save &lt;秒> &lt;改变个数>           <br/>
save 300 10
save 60 10000
stop-writes-on-bgsave-error yes     #当bgsave错误时停止rdb写入
rdbcompression yes                  #采用LZF压缩
rdbchecksum yes                     #校验和
dbfilename dump.rdb                 #保存的文件名
dir /usr/local/var/db/redis/        #保存的路径
```</p>

<h3>启动redis server端</h3>

<p><code>bash
$ redis-server [/path/to/redis.conf]         #mac
$ src/redis-server [/path/to/redis.conf]     #linux
</code></p>

<h3>打开client端，并测试</h3>

<p>```bash
$ redis-cli             #mac
$ src/redis-cli         #linux</p>

<p>redis> set name wanghuida
OK
redis> get name
"wanghuida"
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nginx反向代理自动urldecode问题]]></title>
    <link href="http://www.wanghd.com/blog/2012/11/07/nginxfan-xiang-dai-li-zi-dong-urldecodewen-ti/"/>
    <updated>2012-11-07T16:40:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2012/11/07/nginxfan-xiang-dai-li-zi-dong-urldecodewen-ti</id>
    <content type="html"><![CDATA[<h3>今天妖孽了，发现nginx反向代理会自动urldecode</h3>

<ul>
<li>同事监控两个nginx的access_log，惊人的发现日志里的url不同</li>
<li>去掉反斜杠就ok了，不太清楚nginx内部是如何处理的</li>
</ul>


<p>```
location / {</p>

<pre><code>proxy_pass        http://localhost:8000/;
</code></pre>

<p>}</p>

<h1>修改为下面这样后，一切OK了</h1>

<p>location / {</p>

<pre><code>proxy_pass        http://localhost:8000;
</code></pre>

<p>}
```</p>
]]></content>
  </entry>
  
</feed>
