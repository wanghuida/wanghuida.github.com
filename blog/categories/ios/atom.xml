<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: IOS | 老虎的眼睛]]></title>
  <link href="http://www.wanghd.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://www.wanghd.com/"/>
  <updated>2014-01-26T22:21:00+08:00</updated>
  <id>http://www.wanghd.com/</id>
  <author>
    <name><![CDATA[王惠达 huida wanghuida]]></name>
    <email><![CDATA[wanghuida258@yahoo.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[UITableView (2)]]></title>
    <link href="http://www.wanghd.com/blog/2014/01/26/uitableview-2/"/>
    <updated>2014-01-26T09:30:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2014/01/26/uitableview-2</id>
    <content type="html"><![CDATA[<h3>展示一下最基础的group table应该如何使用（一般设置中最常用），最后有完整的代码</h3>

<p>1 自己先创建一个ViewController, 添加一个UITableView内部属性和数据</p>

<p><code>objective-c
@interface AETableViewController ()
{
  UITableView *_table;  
  NSMutableArray *_data;
}
</code></p>

<p>2 头里需要实现UITableViewDataSource, UITableViewDelegate</p>

<p><code>objective-c
@interface AETableViewController : UIViewController&lt;UITableViewDataSource, UITableViewDelegate&gt;
@end
</code></p>

<p>3 往<em>data中加入一点数据,初始化</em>table,设置代理和数据源</p>

<p>```objective-c
- (id)initWithNibName:(NSString <em>)nibNameOrNil bundle:(NSBundle </em>)nibBundleOrNil
{
  self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
  if (self) {</p>

<pre><code>NSArray *group1 = @[@"关注", @"美美豆", @"安居客"];
NSArray *group2 = @[@"wanghd.com", @"惠达", @"达达"];
NSArray *group3 = @[@"喜欢", @"关注", @"粉丝"];
_data = [[NSMutableArray alloc]initWithArray:@[group1, group2]];
</code></pre>

<p>  }
  return self;
}</p>

<ul>
<li>(void)viewDidLoad
{
[super viewDidLoad];
CGRect rect = [[UIScreen mainScreen]bounds];
<em>table = [[UITableView alloc]initWithFrame:rect style:UITableViewStyleGrouped];
</em>table.delegate = self;
<em>table.dataSource = self;
[self.view addSubview:</em>table];
}
```</li>
</ul>


<!-- more -->


<p>4 设置数据源的总数和内容</p>

<p>```objective-c</p>

<h1>pragma mark -</h1>

<h1>pragma mark datasource</h1>

<p>// 每个section head的高度
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
  return 20;
}</p>

<p>// 每个section foot高度，设置为0没有效果，0.01才行
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
  return 0.01;
}</p>

<p>// cell的高度
- (CGFloat)tableView:(UITableView <em>)tableView heightForRowAtIndexPath:(NSIndexPath </em>)indexPath
{
  return 44.0;
}</p>

<p>// 每个section head 的view
- (UIView <em>)tableView:(UITableView </em>)tableView viewForHeaderInSection:(NSInteger)section
{
  CGRect rect = CGRectMake(0, 0, 320, 20);
  UILabel *txt = [[UILabel alloc]initWithFrame:rect];
  txt.text = [NSString stringWithFormat:@"group%d", section];
  txt.textAlignment = NSTextAlignmentCenter;
  txt.font = [UIFont systemFontOfSize:11];
  return txt;
}</p>

<p>// section 总共有多少个
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
  return [_data count];
}</p>

<p>// 每个section 有多少行
- (NSInteger)tableView:(UITableView <em>)tableView numberOfRowsInSection:(NSInteger)section
{
  NSArray </em>group = [_data objectAtIndex:section];
  return [group count];
}</p>

<p>// 具体的cell
- (UITableViewCell <em>)tableView:(UITableView </em>)tableView cellForRowAtIndexPath:(NSIndexPath <em>)indexPath
{
  static NSString </em>cellId = @"cell";
  UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellId];
  if (cell == nil) {</p>

<pre><code>cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellId];
</code></pre>

<p>  }
  NSArray *group = [_data objectAtIndex:indexPath.section];
  cell.textLabel.text = [group objectAtIndex:indexPath.row];
  return cell;
}
```</p>

<p>5 测试最常用的行点击</p>

<p>```objective-c</p>

<h1>pragma mark -</h1>

<h1>pragma mark delegate</h1>

<ul>
<li>(void)tableView:(UITableView <em>)tableView didSelectRowAtIndexPath:(NSIndexPath </em>)indexPath
{
NSArray <em>group = [_data objectAtIndex:indexPath.section];
NSString </em>txt = [group objectAtIndex:indexPath.row];
NSLog(@"%@", txt);
}</li>
</ul>


<p>```</p>

<p>6 看下效果吧</p>

<p><img style="max-width:300px;" src="http://www.wanghd.com/images/post/ios-uitableview-2.jpg" /></p>

<p>7 看下完整的代码</p>

<p>```objective-c</p>

<p>// .h</p>

<h1>import &lt;UIKit/UIKit.h></h1>

<p>@interface AEGroupTableViewController : UIViewController&lt;UITableViewDataSource, UITableViewDelegate></p>

<p>@end</p>

<p>// .m</p>

<h1>import "AEGroupTableViewController.h"</h1>

<p>@interface AEGroupTableViewController ()
{
  UITableView <em>_table;
  NSMutableArray </em>_data;
}</p>

<p>@end</p>

<p>@implementation AEGroupTableViewController</p>

<ul>
<li><p>(id)initWithNibName:(NSString <em>)nibNameOrNil bundle:(NSBundle </em>)nibBundleOrNil
{
self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
if (self) {
  NSArray <em>group1 = @[@"关注", @"美美豆", @"安居客"];
  NSArray </em>group2 = @[@"wanghd.com", @"惠达", @"达达"];
  NSArray *group3 = @[@"喜欢", @"关注", @"粉丝"];
  _data = [[NSMutableArray alloc]initWithArray:@[group1, group2, group3]];
}
return self;
}</p></li>
<li><p>(void)viewDidLoad
{
[super viewDidLoad];
CGRect rect = [[UIScreen mainScreen]bounds];
rect.origin.y = 20;
<em>table = [[UITableView alloc]initWithFrame:rect style:UITableViewStyleGrouped];
</em>table.delegate = self;
<em>table.dataSource = self;
[self.view addSubview:</em>table];
}</p></li>
</ul>


<h1>pragma mark -</h1>

<h1>pragma mark datasource</h1>

<ul>
<li><p>(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
return 20;
}</p></li>
<li><p>(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
return 0.01;
}</p></li>
<li><p>(CGFloat)tableView:(UITableView <em>)tableView heightForRowAtIndexPath:(NSIndexPath </em>)indexPath
{
return 44.0;
}</p></li>
<li><p>(UIView <em>)tableView:(UITableView </em>)tableView viewForHeaderInSection:(NSInteger)section
{
CGRect rect = CGRectMake(0, 0, 320, 20);
UILabel *txt = [[UILabel alloc]initWithFrame:rect];
txt.text = [NSString stringWithFormat:@"group%d", section];
txt.textAlignment = NSTextAlignmentCenter;
txt.font = [UIFont systemFontOfSize:11];
return txt;
}</p></li>
<li><p>(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
return [_data count];
}</p></li>
<li><p>(NSInteger)tableView:(UITableView <em>)tableView numberOfRowsInSection:(NSInteger)section
{
NSArray </em>group = [_data objectAtIndex:section];
return [group count];
}</p></li>
<li><p>(UITableViewCell <em>)tableView:(UITableView </em>)tableView cellForRowAtIndexPath:(NSIndexPath <em>)indexPath
{
static NSString </em>cellId = @"cell";
UITableViewCell <em>cell = [tableView dequeueReusableCellWithIdentifier:cellId];
if (cell == nil) {
  cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellId];
}
NSArray </em>group = [_data objectAtIndex:indexPath.section];
cell.textLabel.text = [group objectAtIndex:indexPath.row];
return cell;
}</p></li>
</ul>


<h1>pragma mark -</h1>

<h1>pragma mark delegate</h1>

<ul>
<li><p>(void)tableView:(UITableView <em>)tableView didSelectRowAtIndexPath:(NSIndexPath </em>)indexPath
{
NSArray <em>group = [_data objectAtIndex:indexPath.section];
NSString </em>txt = [group objectAtIndex:indexPath.row];
NSLog(@"%@", txt);
}</p></li>
<li><p>(void)didReceiveMemoryWarning
{
[super didReceiveMemoryWarning];
}</p></li>
</ul>


<p>@end</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UITableView (1)]]></title>
    <link href="http://www.wanghd.com/blog/2014/01/24/uitableview-1/"/>
    <updated>2014-01-24T17:28:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2014/01/24/uitableview-1</id>
    <content type="html"><![CDATA[<h3>展示一下最基础的uitableview应该如何使用，最后有完整的代码</h3>

<p>1 自己先创建一个ViewController, 添加一个UITableView内部属性和数据</p>

<p><code>objective-c
@interface AETableViewController ()
{
  UITableView *_table;  
  NSMutableArray *_data;
}
</code></p>

<p>2 头里需要实现UITableViewDataSource, UITableViewDelegate（delegate其实不用，但实际一般都会用到）</p>

<p><code>objective-c
@interface AETableViewController : UIViewController&lt;UITableViewDataSource, UITableViewDelegate&gt;
@end
</code></p>

<p>3 往<em>data中加入一点数据,初始化</em>table,设置代理和数据源</p>

<p>```objective-c
- (id)initWithNibName:(NSString <em>)nibNameOrNil bundle:(NSBundle </em>)nibBundleOrNil
{
  self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
  if (self) {</p>

<pre><code>_data = [NSMutableArray arrayWithArray:@[@"美美豆", @"抢拍", @"预约", @"wanghd.com", @"王惠达"]];
</code></pre>

<p>  }
  return self;
}</p>

<ul>
<li>(void)viewDidLoad
{
[super viewDidLoad];
CGRect rect = [[UIScreen mainScreen] bounds];
<em>table = [[UITableView alloc]initWithFrame:rect style:UITableViewStylePlain];
</em>table.delegate = self;
<em>table.dataSource = self;
[self.view addSubview:</em>table];
}
```</li>
</ul>


<!-- more -->


<p>4 设置数据源的总数和内容</p>

<p>```objective-c</p>

<h1>pragma mark -</h1>

<h1>pragma mark datasource</h1>

<ul>
<li><p>(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
return [_data count];
}</p></li>
<li><p>(UITableViewCell <em>)tableView:(UITableView </em>)tableView cellForRowAtIndexPath:(NSIndexPath <em>)indexPath
{
static NSString </em>cellId = @"cell";
// 这里可以复用cell提高性能
UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellId];
if (cell == nil) {
  cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellId];
}
cell.textLabel.text = [_data objectAtIndex:indexPath.row];
return cell;
}</p></li>
</ul>


<p>```</p>

<p>5 运行起来看下效果吧</p>

<p><img style="max-width:300px;" src="http://www.wanghd.com/images/post/ios-uitableview-1.jpg" /></p>

<p>6 附赠一份完整的代码</p>

<p>```objective-c
// .h</p>

<h1>import &lt;UIKit/UIKit.h></h1>

<p>@interface AETableViewController : UIViewController&lt;UITableViewDataSource, UITableViewDelegate></p>

<p>@end</p>

<p>// .m</p>

<h1>import "AETableViewController.h"</h1>

<p>@interface AETableViewController ()
{
  UITableView <em>_table;
  NSMutableArray </em>_data;
}</p>

<p>@end</p>

<p>@implementation AETableViewController</p>

<ul>
<li><p>(id)initWithNibName:(NSString <em>)nibNameOrNil bundle:(NSBundle </em>)nibBundleOrNil
{
self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
if (self) {
  _data = [NSMutableArray arrayWithArray:@[@"美美豆", @"抢拍", @"预约", @"wanghd.com", @"王惠达"]];
}
return self;
}</p></li>
<li><p>(void)viewDidLoad
{
[super viewDidLoad];
CGRect rect = [[UIScreen mainScreen] bounds];
<em>table = [[UITableView alloc]initWithFrame:rect style:UITableViewStylePlain];
</em>table.delegate = self;
<em>table.dataSource = self;
[self.view addSubview:</em>table];
}</p></li>
</ul>


<h1>pragma mark -</h1>

<h1>pragma mark datasource</h1>

<ul>
<li><p>(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
return [_data count];
}</p></li>
<li><p>(UITableViewCell <em>)tableView:(UITableView </em>)tableView cellForRowAtIndexPath:(NSIndexPath <em>)indexPath
{
static NSString </em>cellId = @"cell";
UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellId];
if (cell == nil) {
  cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellId];
}
cell.textLabel.text = [_data objectAtIndex:indexPath.row];
return cell;
}</p></li>
<li><p>(void)didReceiveMemoryWarning
{
[super didReceiveMemoryWarning];
}</p></li>
</ul>


<p>@end
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[纯代码写ios]]></title>
    <link href="http://www.wanghd.com/blog/2014/01/22/chun-dai-ma-xie-ios/"/>
    <updated>2014-01-22T18:30:00+08:00</updated>
    <id>http://www.wanghd.com/blog/2014/01/22/chun-dai-ma-xie-ios</id>
    <content type="html"><![CDATA[<h3>纯代码写ios 后期更容易维护</h3>

<ul>
<li>半年没有写文章，趁过年放假好好补补，用一个简单的纯代码helloworld开始吧</li>
</ul>


<p>1 打开xcode创建一个空项目呗</p>

<p><img style="max-width:500px;" src="http://www.wanghd.com/images/post/ios-new-project.jpg" /></p>

<p>2 查看AppDelegate</p>

<p>```objective-c
// AppDelegate 就是UIApplicationMain的代理 , 启动时会调用一下方法
- (BOOL)application:(UIApplication <em>)application didFinishLaunchingWithOptions:(NSDictionary </em>)launchOptions
{</p>

<pre><code>// 初始化一个uiwindow
self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];
// 设置默认背景为白色
self.window.backgroundColor = [UIColor whiteColor];
// 显示到最前端，并获取输入
[self.window makeKeyAndVisible];
return YES;
</code></pre>

<p>}
```</p>

<!-- more -->


<p>3 添加一个自己view controller</p>

<p>```objective-c</p>

<h1>import "AEViewController.h"</h1>

<p>@interface AEViewController ()</p>

<p>@end</p>

<p>@implementation AEViewController</p>

<ul>
<li><p>(id)initWithNibName:(NSString <em>)nibNameOrNil bundle:(NSBundle </em>)nibBundleOrNil
{
self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
if (self) {
}
return self;
}</p></li>
<li><p>(void)viewDidLoad
{
[super viewDidLoad];
CGRect rect = [[UIScreen mainScreen] bounds];
UILabel *label = [[UILabel alloc]initWithFrame:CGRectMake(0, 0, 100, 50)];
label.center = CGPointMake(rect.size.width/2, rect.size.height/2);
label.text = @"Hello World";
label.textColor = [UIColor blackColor];
[self.view addSubview:label];
}</p></li>
<li><p>(void)didReceiveMemoryWarning
{
[super didReceiveMemoryWarning];
}</p></li>
</ul>


<p>@end</p>

<p>```</p>

<p>4 设置rootViewController</p>

<p>```objective-c
- (BOOL)application:(UIApplication <em>)application didFinishLaunchingWithOptions:(NSDictionary </em>)launchOptions
{
  self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];
  self.window.backgroundColor = [UIColor whiteColor];
  [self.window makeKeyAndVisible];</p>

<p>  AEViewController *viewCtl = [[AEViewController alloc]init];
  self.window.rootViewController = viewCtl;</p>

<p>  return YES;
}
```</p>

<p>5 运行看一下效果</p>

<p><img style="max-width:300px;" src="http://www.wanghd.com/images/post/ios-new-project-ret.jpg" /></p>
]]></content>
  </entry>
  
</feed>
